#
# NuINu <don't@send.my>, 2021.
#
#. extracted from in_ed/lispweb2.html
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-09-05 09:17+0300\n"
"PO-Revision-Date: 2021-09-07 15:31+0300\n"
"Last-Translator: NuINu <don't@send.my>\n"
"Language-Team: Russian <don't@send.my>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Gtranslator 2.91.7\n"
"Plural-Forms: nplurals=5; plural=n==1 ? 0 : n==2 ? 1 : n<7 ? 2 : n<11 ? 3 : "
"4;\n"

#: in_ed/lispweb2.html:24
msgid ""
"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n"
"<html>\n"
"<head>\n"
"\t<meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\"/>\n"
"\t<title></title>\n"
"\t<meta name=\"generator\" content=\"LibreOffice 6.0.7.3 (Linux)\"/>\n"
"\t<meta name=\"created\" content=\"2021-09-05T08:50:24.492935475\"/>\n"
"\t<meta name=\"changed\" content=\"2021-09-05T08:51:26.494434735\"/>\n"
"\t<style type=\"text/css\">\n"
"\t\t@page { margin: 2cm }\n"
"\t\tp { margin-bottom: 0.25cm; line-height: 115% }\n"
"\t\th2.cjk { font-family: \"Noto Sans CJK SC\" }\n"
"\t\th2.ctl { font-family: \"Lohit Devanagari\" }\n"
"\t\th3.cjk { font-family: \"Noto Sans CJK SC\" }\n"
"\t\th3.ctl { font-family: \"Lohit Devanagari\" }\n"
"\t\tpre.cjk { font-family: \"Courier New\", monospace }\n"
"\t\ta:link { so-language: zxx }\n"
"\t\tcode.cjk { font-family: \"Courier New\", monospace }\n"
"\t</style>\n"
"</head>\n"
"<body lang=\"en-US\" dir=\"ltr\">\n"
"<h2 class=\"western\">Lisp for the Web, Part II \n"
"</h2>"
msgstr ""
"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n"
"<html>\n"
"<head>\n"
"\t<meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\"/>\n"
"\t<title></title>\n"
"\t<meta name=\"generator\" content=\"LibreOffice 6.0.7.3 (Linux)\"/>\n"
"\t<meta name=\"created\" content=\"2021-09-05T08:50:24.492935475\"/>\n"
"\t<meta name=\"changed\" content=\"2021-09-05T08:51:26.494434735\"/>\n"
"\t<style type=\"text/css\">\n"
"\t\t@page { margin: 2cm }\n"
"\t\tp { margin-bottom: 0.25cm; line-height: 115% }\n"
"\t\th2.cjk { font-family: \"Noto Sans CJK SC\" }\n"
"\t\th2.ctl { font-family: \"Lohit Devanagari\" }\n"
"\t\th3.cjk { font-family: \"Noto Sans CJK SC\" }\n"
"\t\th3.ctl { font-family: \"Lohit Devanagari\" }\n"
"\t\tpre.cjk { font-family: \"Courier New\", monospace }\n"
"\t\ta:link { so-language: zxx }\n"
"\t\tcode.cjk { font-family: \"Courier New\", monospace }\n"
"\t</style>\n"
"</head>\n"
"<body lang=\"en-US\" dir=\"ltr\">\n"
"<h2 class=\"western\">Lisp для Web, Часть II \n"
"</h2>"

#: in_ed/lispweb2.html:27
msgid ""
"<p><a href=\"https://web.archive.org/web/20171109223946/http://msnyder.info/"
"posts/2011/07/lisp-for-the-web-part-ii/\">â</a>\n"
"</p>"
msgstr ""

#: in_ed/lispweb2.html:34
msgid ""
"<p>In this article, I hope to extend Adam Petersenâs article <a href="
"\"https://web.archive.org/web/20171109223946/http://www.adampetersen.se/"
"articles/lispweb.htm\"><i>Lisp\n"
"for the Web</i></a>, bringing up for discussion some of the aspects\n"
"of web programming that most of us are familiar&nbsp;with. \n"
"</p>"
msgstr ""
"<p>В этой статье я надеюсь дополнить статью Адама Петерсена\n"
"<a href=\"https://web.archive.org/web/20171109223946/http://www.adampetersen."
"se/articles/lispweb.htm\"><i>Лисп для Web</i></a>, предложив для обсуждения "
"некоторые аспекты \n"
"веб-программирования, с которыми большинство из нас знакомо. \n"
"</p>"

#: in_ed/lispweb2.html:43
msgid ""
"<h3 class=\"western\">Table of&nbsp;Contents</h3>\n"
"<div id=\"text-table-of-contents\" dir=\"ltr\">\n"
"\t<ul>\n"
"\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a href=\"https://web.archive.org/"
"web/20171109223946/http://msnyder.info/posts/2011/07/lisp-for-the-web-part-"
"ii/#sec-1\">What\n"
"\t\tto&nbsp;Expect</a> \n"
"\t\t</p>"
msgstr ""
"<h3 class=\"western\">Оглавление</h3>\n"
"<div id=\"text-table-of-contents\" dir=\"ltr\">\n"
"\t<ul>\n"
"\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a href=\"https://web.archive.org/"
"web/20171109223946/http://msnyder.info/posts/2011/07/lisp-for-the-web-part-"
"ii/#sec-1\"> Что ожидать</a> \n"
"\t\t</p>"

#: in_ed/lispweb2.html:49
msgid ""
"\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a href=\"https://web.archive.org/"
"web/20171109223946/http://msnyder.info/posts/2011/07/lisp-for-the-web-part-"
"ii/#sec-2\">The\n"
"\t\tOriginal&nbsp;Program</a> \n"
"\t\t</p>"
msgstr ""
"\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a href=\"https://web.archive.org/"
"web/20171109223946/http://msnyder.info/posts/2011/07/lisp-for-the-web-part-"
"ii/#sec-2\">Оригинальная программа\n"
"</a> \n"
"\t\t</p>"

#: in_ed/lispweb2.html:55
msgid ""
"\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a href=\"https://web.archive.org/"
"web/20171109223946/http://msnyder.info/posts/2011/07/lisp-for-the-web-part-"
"ii/#sec-3\">Your\n"
"\t\tLisp&nbsp;Environment</a> \n"
"\t\t</p>"
msgstr ""
"\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a href=\"https://web.archive.org/"
"web/20171109223946/http://msnyder.info/posts/2011/07/lisp-for-the-web-part-"
"ii/#sec-3\">Ваша среда Lisp\n"
"</a> \n"
"\t\t</p>"

#: in_ed/lispweb2.html:60
msgid ""
"\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a href=\"https://web.archive.org/"
"web/20171109223946/http://msnyder.info/posts/2011/07/lisp-for-the-web-part-"
"ii/#sec-4\">Smarter&nbsp;Routes</a>\n"
"\t\t\t\t</p>"
msgstr ""
"\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a href=\"https://web.archive.org/"
"web/20171109223946/http://msnyder.info/posts/2011/07/lisp-for-the-web-part-"
"ii/#sec-4\"> Умные маршруты</a>\n"
"\t\t\t\t</p>"

#: in_ed/lispweb2.html:66
msgid ""
"\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a href=\"https://web.archive.org/"
"web/20171109223946/http://msnyder.info/posts/2011/07/lisp-for-the-web-part-"
"ii/#sec-5\">Writing\n"
"\t\tCSS in&nbsp;Lisp</a> \n"
"\t\t</p>"
msgstr ""
"\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a href=\"https://web.archive.org/"
"web/20171109223946/http://msnyder.info/posts/2011/07/lisp-for-the-web-part-"
"ii/#sec-5\">Написание CSS на Лиспе</a> \n"
"\t\t</p>"

#: in_ed/lispweb2.html:71
msgid ""
"\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a href=\"https://web.archive.org/"
"web/20171109223946/http://msnyder.info/posts/2011/07/lisp-for-the-web-part-"
"ii/#sec-6\">Using&nbsp;jQuery</a>\n"
"\t\t\t\t</p>"
msgstr ""
"\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a href=\"https://web.archive.org/"
"web/20171109223946/http://msnyder.info/posts/2011/07/lisp-for-the-web-part-"
"ii/#sec-6\">Использование jQuery</a>\n"
"\t\t\t\t</p>"

#: in_ed/lispweb2.html:77
msgid ""
"\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a href=\"https://web.archive.org/"
"web/20171109223946/http://msnyder.info/posts/2011/07/lisp-for-the-web-part-"
"ii/#sec-7\">Writing\n"
"\t\ta Test&nbsp;Suite</a> \n"
"\t\t</p>"
msgstr ""
"\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a href=\"https://web.archive.org/"
"web/20171109223946/http://msnyder.info/posts/2011/07/lisp-for-the-web-part-"
"ii/#sec-7\">Написание набора тестов</a> \n"
"\t\t</p>"

#: in_ed/lispweb2.html:80
msgid "\t\t<li/>"
msgstr ""

#: in_ed/lispweb2.html:83
msgid ""
"<p><a href=\"https://web.archive.org/web/20171109223946/http://msnyder.info/"
"posts/2011/07/lisp-for-the-web-part-ii/#sec-8\">Conclusion</a>\n"
"\t\t\t\t</p>"
msgstr ""
"<p><a href=\"https://web.archive.org/web/20171109223946/http://msnyder.info/"
"posts/2011/07/lisp-for-the-web-part-ii/#sec-8\">Заключение </a>\n"
"\t\t\t\t</p>"

#: in_ed/lispweb2.html:90
msgid ""
"\t</ul>\n"
"</div>\n"
"<div id=\"outline-container-sec-1\" dir=\"ltr\">\n"
"\t<h3 class=\"western\"><a name=\"sec-1\"></a>What to&nbsp;Expect</h3>\n"
"\t<div id=\"text-1\" dir=\"ltr\">"
msgstr ""
"\t</ul>\n"
"</div>\n"
"<div id=\"outline-container-sec-1\" dir=\"ltr\">\n"
"\t<h3 class=\"western\"><a name=\"sec-1\"></a>Что ожидать</h3>\n"
"\t<div id=\"text-1\" dir=\"ltr\">"

#: in_ed/lispweb2.html:98
msgid ""
"<p>Adam Petersen wrote an awesome article called <a href=\"https://web."
"archive.org/web/20171109223946/http://www.adampetersen.se/articles/lispweb."
"htm\">Lisp\n"
"\t\tfor the Web</a>. In it, he walks readers through creating a simple\n"
"\t\tweb application using Common Lisp (hereinafter Lisp). Itâs a\n"
"\t\tfantastic article, and I recently sat down with it (and <a href="
"\"https://web.archive.org/web/20171109223946/http://landoflisp.com/\">some</"
"a>\n"
"\t\t<a href=\"https://web.archive.org/web/20171109223946/http://www.ccs.neu."
"edu/home/matthias/BTLS/\">other</a>\n"
"\t\tresources) to finally write some code in&nbsp;Lisp. \n"
"\t\t</p>"
msgstr ""
"<p>Адам Петерсен написал потрясающую статью под названием <a href=\"https://"
"web.archive.org/web/20171109223946/http://www.adampetersen.se/articles/"
"lispweb.htm\">Lisp\n"
"\tдля Web</a>. В ней он знакомит читателей с созданием простого \n"
"\tвеб-приложения с использованием Common Lisp (далее Lisp). \n"
"\tЭто фантастическая статья, и я недавно сел с ней (и \n"
"\t<a href=\"https://web.archive.org/web/20171109223946/http://landoflisp.com/"
"\">некоторыми</a> \n"
"\t<a href=\"https://web.archive.org/web/20171109223946/http://www.ccs.neu."
"edu/home/matthias/BTLS/\">другими</a> ресурсами), чтобы наконец написать код "
"на Лиспе. \n"
"\t</p>"

#: in_ed/lispweb2.html:106
msgid ""
"<p>So what Iâd like to do here is take some of the things that\n"
"\t\twere left out (with good reason) of the original article, and flesh\n"
"\t\tout the experience of developing for the web with Lisp. At the end\n"
"\t\tof the article, Mr. Petersen writes&nbsp;that \n"
"\t\t</p>"
msgstr ""
"<p>Так что я хотел бы здесь взять некоторые вещи, которые были упущены \n"
"\t(по уважительной причине) в исходной статье, и конкретизировать \n"
"\tопыт разработки для Интернета с помощью Lisp. В конце статьи \n"
"\tг-н Петерсен пишет, что \n"
"\t\t</p>"

#: in_ed/lispweb2.html:113
msgid ""
"\t\t<blockquote>Due to the dynamic and interactive nature of Lisp itâs\n"
"\t\ta perfect fit for prototyping. And because Lisp programs are so\n"
"\t\teasy to evolve, that prototype may end up as a full-blown product\n"
"\t\tone&nbsp;day. \n"
"\t\t</blockquote>"
msgstr ""
"\t\t<blockquote> Благодаря динамичному и интерактивному характеру Lisp он \n"
"\t\tидеально подходит для создания прототипов. А поскольку программы на "
"Лиспе \n"
"\t\tочень легко развивать, этот прототип может однажды превратиться в \n"
"\t\tполноценный продукт. \n"
"\t\t</blockquote>"

#: in_ed/lispweb2.html:119
msgid ""
"<p>Itâs my hope that in continuing his tutorial in this way I can\n"
"\t\tshow readers how that process from prototype to production may take\n"
"\t\tplace; in an organic way that showcases Lispâs\n"
"\t\tâevolutionaryâ&nbsp;abilities. \n"
"\t\t</p>"
msgstr ""
"<p>Я надеюсь, что, продолжая его руководство таким образом, я смогу "
"показать \n"
"\tчитателям, как может происходить этот процесс от прототипа до продукта; \n"
"\tорганичным образом, демонстрирующим «эволюционные» способности Лиспа.  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:126
msgid ""
"\t</div>\n"
"</div>\n"
"<div id=\"outline-container-sec-2\" dir=\"ltr\">\n"
"\t<h3 class=\"western\"><a name=\"sec-2\"></a>The Original&nbsp;Program</"
"h3>\n"
"\t<div id=\"text-2\" dir=\"ltr\">"
msgstr ""
"\t</div>\n"
"</div>\n"
"<div id=\"outline-container-sec-2\" dir=\"ltr\">\n"
"\t<h3 class=\"western\"><a name=\"sec-2\"></a> Оригинальная программа</h3>\n"
"\t<div id=\"text-2\" dir=\"ltr\">"

#: in_ed/lispweb2.html:131
msgid ""
"<p>The original program can be found at the <a href=\"https://web.archive."
"org/web/20171109223946/http://www.adampetersen.se/articles/lispweb.htm"
"\">Lisp\n"
"\t\tfor the Web</a> article. I made some changes to it in order to fit\n"
"\t\tsome specific&nbsp;criteria: \n"
"\t\t</p>"
msgstr ""
"<p>Исходную программу можно найти в статье о <a href=\"https://web.archive."
"org/web/20171109223946/http://www.adampetersen.se/articles/lispweb.htm"
"\">Lisp для Web</a>. Я внес в неё\n"
"\tнекоторые изменения, чтобы соответствовать определенным критериям: \n"
"\t\t</p>"

#: in_ed/lispweb2.html:145
msgid ""
"\t\t<ul>\n"
"\t\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\">The original article\n"
"\t\t\trecommends using BerkeleyDB for its backend, accessed through the\n"
"\t\t\tLisp library <a href=\"https://web.archive.org/web/20171109223946/"
"http://common-lisp.net/project/elephant/\">Elephant</a>.\n"
"\t\t\tIâm still using Elephant, though I believe there may be more\n"
"\t\t\tâLispyâ serialization libraries available â Elephant\n"
"\t\t\trequires a lot of dips into foreign functions. BerkeleyDB,\n"
"\t\t\thowever, has been swapped out for SQLite. This makes deployment a\n"
"\t\t\tlot easier, and avoids the <a href=\"https://web.archive.org/"
"web/20171109223946/http://en.wikipedia.org/wiki/Berkeley_DB#Licensing"
"\">licensing\n"
"\t\t\thassles</a> that seem to follow BerkeleyDB&nbsp;around. \n"
"\t\t\t</p>"
msgstr ""
"\t\t<ul>\n"
"\t\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\">В исходной статье рекомендуется использовать "
"BerkeleyDB \n"
"\tв качестве серверной части, доступ к которой осуществляется через "
"библиотеку \n"
"\tLisp <a href=\"https://web.archive.org/web/20171109223946/http://common-"
"lisp.net/project/elephant/\">Elephant</a>. Я все еще использую Elephant, "
"хотя полагаю, что может быть доступно\n"
"\tболее Лисповая библиотека сериализации - Elephant требует много погружений "
"во внешние\n"
"\tфункции. Однако BerkeleyDB заменен на SQLite. Это значительно упрощает "
"развертывание и\n"
"\tпозволяет избежать <a href=\"https://web.archive.org/web/20171109223946/"
"http://en.wikipedia.org/wiki/Berkeley_DB#Licensing\">проблем с "
"лицензированием</a>, которые, похоже,\n"
"\t преследуют BerkeleyDB. \n"
"\t\t\t</p>"

#: in_ed/lispweb2.html:152
msgid ""
"\t\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\">We are binding the Elephant\n"
"\t\t\tstore to a variable, namely <code class=\"western\">*store*</code>,\n"
"\t\t\tin case we want to change databases during top-level&nbsp;"
"interaction.\n"
"\t\t\t\t\t\t</p>"
msgstr ""
"\t\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\">Мы привязываем хранилище Elephant к "
"переменной, а именно \n"
"\t<code class=\"western\">*store*</code>, на случай, если мы хотим изменить "
"базы \n"
"\tданных во время взаимодействия на верхнем уровне.\n"
"\t\t\t\t\t\t</p>"

#: in_ed/lispweb2.html:160
msgid ""
"\t\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\">The syntax for starting a\n"
"\t\t\tserver in Hunchentoot has changed since the original article. We\n"
"\t\t\tnow make an instance of a Hunchentoot <a href=\"https://web.archive."
"org/web/20171109223946/http://weitz.de/hunchentoot/#acceptor\">acceptor</a>\n"
"\t\t\tin order to get the server bound and&nbsp;running. \n"
"\t\t\t</p>"
msgstr ""
"\t\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\">Синтаксис для запуска сервера в Hunchentoot "
"изменился \n"
"\t\t\tпо сравнению с исходной статьей. Теперь мы создаем экземпляр \n"
"\t\t\t<a href=\"https://web.archive.org/web/20171109223946/http://weitz.de/"
"hunchentoot/#acceptor\">acceptor</a>(акцептора) Hunchentoot, чтобы привязать "
"и запустить сервер.  \n"
"\t\t\t</p>"

#: in_ed/lispweb2.html:171
msgid ""
"\t\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\">The original article uses URLs\n"
"\t\t\twhich end in <code class=\"western\">.htm</code>. For example, the\n"
"\t\t\tindex page is located at <code class=\"western\">/retro-games.htm</"
"code>.\n"
"\t\t\tThereâs no reason for this to not simply be <code class=\"western\">/"
"retro-games</code>,\n"
"\t\t\tand Iâve changed all URLs to follow this convention. Remember,\n"
"\t\t\tkids, <a href=\"https://web.archive.org/web/20171109223946/http://www."
"w3.org/Provider/Style/URI\">cool\n"
"\t\t\tURIs</a> donât reveal their&nbsp;implementation! \n"
"\t\t\t</p>"
msgstr ""
"\t\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\">В исходной статье используются URL-адреса, \n"
"\t\t\tоканчивающиеся на <code class=\"western\">.htm</code>. Например, \n"
"\t\t\tиндексная страница находится по адресу <code class=\"western\">/retro-"
"games.htm</code>. Нет никаких причин для того, чтобы это не было просто \n"
"<code class=\"western\">/retro-games</code>, и я изменил все URL-адреса, "
"чтобы следовать \n"
"\t\t\tэтому соглашению. Помните, ребята, <a href=\"https://web.archive.org/"
"web/20171109223946/http://www.w3.org/Provider/Style/URI\">крутые URI</a> не "
"раскрывают свою реализацию!\n"
"\t\t\t</p>"

#: in_ed/lispweb2.html:174
msgctxt "in_ed/lispweb2.html:174"
msgid "\t\t\t<li/>"
msgstr ""

#: in_ed/lispweb2.html:181
msgid ""
"<p>To be a bit more inclusive, we are no longer just voting\n"
"\t\t\ton retro games. Now you can add votes for any game you wish! (This\n"
"\t\t\tis not really a necessary change, but I donât know many very old\n"
"\t\t\tgames, so at the very least it makes coming up with\n"
"\t\t\texamples&nbsp;easier.) \n"
"\t\t\t</p>"
msgstr ""
"<p>Чтобы быть немного более инклюзивным, мы больше не голосуем просто \n"
"\t\t\tпо ретро-играм. Теперь вы можете добавлять голоса за любую игру! \n"
"\t\t\t(На самом деле это не обязательное изменение, но я не знаю многих \n"
"\t\t\tочень старых игр, поэтому, по крайней мере, это упрощает \n"
"\t\t\tпридумывание примеров.)\n"
"\t\t\t</p>"

#: in_ed/lispweb2.html:184
msgctxt "in_ed/lispweb2.html:184"
msgid "\t\t</ul>"
msgstr ""

#: in_ed/lispweb2.html:189
msgid ""
"<p>So the first thing weâre going to do is make these\n"
"\t\ttransformations to the original file, and then we can continue\n"
"\t\tworking from&nbsp;there. \n"
"\t\t</p>"
msgstr ""
"<p>Итак, первое, что мы собираемся сделать, это внести эти преобразования \n"
"\t\tв исходный файл, а затем мы сможем продолжить работу оттуда. \n"
"\t\t</p>"

#: in_ed/lispweb2.html:195
msgid ""
"<p>If youâd like the diff so you can start off with these\n"
"\t\tchanges, Iâve posted it to Gist: <a href=\"https://web.archive.org/"
"web/20171109223946/http://gist.github.com/1024814\">game-voter.patch</a>\n"
"\t\t\t\t</p>"
msgstr ""
"<p>Если вам нужна разница(отличие), чтобы вы могли начать с этих "
"изменений, \n"
"\t\tя разместил её в Gist: <a href=\"https://web.archive.org/"
"web/20171109223946/http://gist.github.com/1024814\">game-voter.patch</a>\n"
"\t\t\t\t</p>"

#: in_ed/lispweb2.html:199
msgid ""
"<p><img src=\"lispweb2_html_af4c4238101b11ae.png\" name=\"Image1\" alt="
"\"main-page.png\" align=\"bottom\" width=\"750\" height=\"657\" border=\"0\"/"
">"
msgstr ""

#: in_ed/lispweb2.html:201
msgid "\t\t\t\t</p>"
msgstr ""

#: in_ed/lispweb2.html:208
msgid ""
"\t</div>\n"
"</div>\n"
"<div id=\"outline-container-sec-3\" dir=\"ltr\">\n"
"\t<h3 class=\"western\"><a name=\"sec-3\"></a>Your Lisp&nbsp;Environment</"
"h3>\n"
"\t<div id=\"text-3\" dir=\"ltr\">"
msgstr ""
"\t</div>\n"
"</div>\n"
"<div id=\"outline-container-sec-3\" dir=\"ltr\">\n"
"\t<h3 class=\"western\"><a name=\"sec-3\"></a>Ваша среда Lisp</h3>\n"
"\t<div id=\"text-3\" dir=\"ltr\">"

#: in_ed/lispweb2.html:216
msgid ""
"<p>The original article, quite wisely, avoids discussing the actual\n"
"\t\tenvironment in which its Lisp is set up. Itâs not useful to\n"
"\t\tanyone to have an obsolete description of a Lisp installation. In\n"
"\t\tthis case, however, Iâd like to take a snapshot of the state of\n"
"\t\tLisp in certain ways; I am going to describe, to some extent,\n"
"\t\tmy&nbsp;setup. \n"
"\t\t</p>"
msgstr ""
"<p>В оригинальной статье весьма разумно избегается обсуждение реальной "
"среды, \n"
"\t\tв которой установлен Лисп. Никому не полезно иметь устаревшее \n"
"\t\tописание установки Lisp. В этом случае, однако, я хотел бы сделать \n"
"\t\tснимок состояния Lisp определенными способами; Я собираюсь в некоторой \n"
"\t\tстепени описать свою настройку. \n"
"\t\t</p>"

#: in_ed/lispweb2.html:226
msgid ""
"<p>Running OS X 10.6.7, with <a href=\"https://web.archive.org/"
"web/20171109223946/http://www.sbcl.org/\">Steel\n"
"\t\tBank Common Lisp</a> installed through the excellent <a href=\"https://"
"web.archive.org/web/20171109223946/http://mxcl.github.com/homebrew/"
"\">homebrew</a>\n"
"\t\tpackage management system. My editor, REPL, and general Lisp\n"
"\t\tinteraction environment is Emacs 23.3, compiled for the Mac by\n"
"\t\t<a href=\"https://web.archive.org/web/20171109223946/http://"
"emacsformacosx.com/\">David\n"
"\t\tCaldwell</a>. \n"
"\t\t</p>"
msgstr ""
"<p>Запуск OS X 10.6.7 с установленным <a href=\"https://web.archive.org/"
"web/20171109223946/http://www.sbcl.org/\">Steel Bank Common Lisp</a> с "
"помощью превосходной системы управления \n"
"пакетами(какой то маковский менеджер) <a href=\"https://web.archive.org/"
"web/20171109223946/http://mxcl.github.com/homebrew/\">homebrew</a>. Мой "
"редактор, REPL и общая среда взаимодействия с Лиспом - \n"
"это Emacs 23.3, скомпилированный для Mac <a href=\"https://web.archive.org/"
"web/20171109223946/http://emacsformacosx.com/\">Дэвидом Колдуэллом</a>. \n"
"\t\t</p>"

#: in_ed/lispweb2.html:234
msgid ""
"<p>The package manager Iâm using is the fantastic <a href=\"https://web."
"archive.org/web/20171109223946/http://www.quicklisp.org/\">Quicklisp</a>.\n"
"\t\tIâve tried installing packages for Common Lisp before with ASDF,\n"
"\t\tand Quicklisp is so much more simple, capable, and promising\n"
"\t\titâs&nbsp;scary. \n"
"\t\t</p>"
msgstr ""
"<p>Я использую менеджер пакетов - это фантастический <a href=\"https://web."
"archive.org/web/20171109223946/http://www.quicklisp.org/\">Quicklisp</a>. Я "
"уже пробовал устанавливать \n"
"\t\tпакеты для Common Lisp с помощью ASDF, и Quicklisp намного проще, "
"мощнее \n"
"\t\tи многообещающе, что пугает. \n"
"\t\t</p>"

#: in_ed/lispweb2.html:242
msgid ""
"<p>Within a REPL, the following command did everything I expected\n"
"\t\tand nothing I didnât: installed the libraries (often called\n"
"\t\t<b>systems</b>) I needed without complaining or breaking, and\n"
"\t\tproviding the packages in the&nbsp;top-level. \n"
"\t\t</p>"
msgstr ""
"<p>В REPL следующая команда сделала все, что я ожидал, и ничего, что я не "
"сделал: \n"
"\t\tустановил библиотеки (часто называемые системами), которые мне были \n"
"\t\tнужны, без жалоб и поломок, и предоставил пакеты на верхнем уровне.\n"
"\t\t</p>"

#: in_ed/lispweb2.html:250
msgid ""
"\t\t<pre class=\"western\" style=\"margin-bottom: 0.5cm\">CL-USER&gt; (ql:"
"quickload '(cl-who hunchentoot parenscript elephant fiveam css-lite cl-"
"json))</pre>\n"
"\t</div>\n"
"</div>\n"
"<div id=\"outline-container-sec-4\" dir=\"ltr\">\n"
"\t<h3 class=\"western\"><a name=\"sec-4\"></a>Smarter&nbsp;Routes</h3>\n"
"\t<div id=\"text-4\" dir=\"ltr\">"
msgstr ""
"\t\t<pre class=\"western\" style=\"margin-bottom: 0.5cm\">CL-USER&gt; (ql:"
"quickload '(cl-who hunchentoot parenscript elephant fiveam css-lite cl-"
"json))</pre>\n"
"\t</div>\n"
"</div>\n"
"<div id=\"outline-container-sec-4\" dir=\"ltr\">\n"
"\t<h3 class=\"western\"><a name=\"sec-4\"></a>Умные маршруты</h3>\n"
"\t<div id=\"text-4\" dir=\"ltr\">"

#: in_ed/lispweb2.html:267
msgid ""
"<p>There was one thing I noticed almost immediately as I was\n"
"\t\tplaying around with the program. If I wanted to make a change to a\n"
"\t\tâcontrollerâ, i.e. any of the functions defined by\n"
"\t\t<code class=\"western\">define-url-fn</code>, re-evaluating it would\n"
"\t\tsimply push another route onto the <code class=\"western\">hunchentoot:"
"*dispatch-table*</code>.\n"
"\t\tThis isnât a huge problem <b>per se</b>, but it is unnecessary\n"
"\t\tcomputation, and after having pushed a hundred or so different\n"
"\t\tversions of a controller dispatch onto the <code class=\"western"
"\">*dispatch-table*</code>,\n"
"\t\tI desired a more practical way of describing the routes in my site.\n"
"\t\tIn addition, using a macro such as <code class=\"western\">define-url-"
"fn</code>\n"
"\t\tto describe the routes means that Emacs doesnât recognize that\n"
"\t\tcontroller function as a valid symbol. Itâs a silly convenience,\n"
"\t\tbut the more I use <code class=\"western\">defmacro</code> and <code "
"class=\"western\">defun</code>,\n"
"\t\tthe easier I can find the code Iâm looking for with Emacsâ\n"
"\t\tsymbol&nbsp;lookup. \n"
"\t\t</p>"
msgstr ""
"<p>Была одна вещь, которую я заметил почти сразу, когда играл с "
"программой. \n"
"\t\tЕсли бы я хотел внести изменения в «контроллер», то есть в \n"
"\t\tлюбую из функций, определенных с помощью \n"
"\t\t<code class=\"western\">define-url-fn</code>, перевычисление \n"
"\t\tего просто push(затолкнула) бы другой маршрут в \n"
"\t\t<code class=\"western\">hunchentoot:*dispatch-table*</code>. \n"
"\t\tСамо по себе это не большая проблема, но это ненужное вычисление, \n"
"\t\tи после того, как я поместил сотню или около того различных версий\n"
"\t\tдиспетчеризации контроллера в <code class=\"western\">*dispatch-table*</"
"code>(таблицу диспетчеризации), я захотел более практичный способ описания "
"маршрутов \n"
"\t\tна моем сайте. Кроме того, использование макроса, такого как \n"
"\t\t<code class=\"western\">define-url-fn</code>, для описания маршрутов \n"
"\t\tозначает, что Emacs не распознает эту функцию контроллера как "
"допустимый \n"
"\t\tсимвол. Это глупое удобство, но чем больше я использую <code class="
"\"western\">defmacro</code> и <code class=\"western\">defun</code>, тем "
"легче мне \n"
"\t\tнайти код, который я ищу, с помощью поиска символов Emacs. \n"
"\t\t</p>"

#: in_ed/lispweb2.html:272
msgid ""
"<p>So for example, the controller for adding a game goes from&nbsp;this:\n"
"\t\t\t\t</p>"
msgstr ""
"<p>Так, например, контроллер для добавления игры выглядит следующим "
"образом: \n"
"\t\t\t\t</p>"

#: in_ed/lispweb2.html:282
msgid ""
"\t\t<pre class=\"western\">(define-url-fn (game-added)\n"
"  (let ((name (parameter &quot;name&quot;)))\n"
"    (unless (or (null name) (zerop (length name))) ; In case JavaScript is "
"turned off.\n"
"      (add-game name))\n"
"    (redirect &quot;/games&quot;))) ; Display the front page.</pre>\n"
"<p>\n"
"\t\tTo&nbsp;this: \n"
"\t\t</p>"
msgstr ""
"\t\t<pre class=\"western\">(define-url-fn (game-added)\n"
"  (let ((name (parameter &quot;name&quot;)))\n"
"    (unless (or (null name) (zerop (length name))) ; In case JavaScript is "
"turned off.\n"
"      (add-game name))\n"
"    (redirect &quot;/games&quot;))) ; Display the front page.</pre>\n"
"<p>\n"
"\t\tК этому: \n"
"\t\t</p>"

#: in_ed/lispweb2.html:294
msgid ""
"\t\t<pre class=\"western\">(defun controller-game-added ()\n"
"  (let ((name (parameter &quot;name&quot;)))\n"
"    (unless (or (null name) (zerop (length name)))\n"
"      (add-game name))\n"
"    (redirect &quot;/retro-games&quot;)))</pre>\n"
"<p>\n"
"\t\tNow with a handful of functions, I manually set the\n"
"\t\t<code class=\"western\">*dispatch-table*</code> to the list of routes\n"
"\t\tI desired, using Hunchentootâs dispatcher creation&nbsp;functions.\n"
"\t\t\t\t</p>"
msgstr ""
"\t\t<pre class=\"western\">(defun controller-game-added ()\n"
"  (let ((name (parameter &quot;name&quot;)))\n"
"    (unless (or (null name) (zerop (length name)))\n"
"      (add-game name))\n"
"    (redirect &quot;/retro-games&quot;)))</pre>\n"
"<p>\n"
"\t\tТеперь, имея несколько функций, я вручную установил <code class=\"western"
"\">*dispatch-table*</code> в список желаемых маршрутов, \n"
"\t\tиспользуя функции создания диспетчера Hunchentoot.\n"
"\t\t\t\t</p>"

#: in_ed/lispweb2.html:301
msgid ""
"<p><code class=\"western\">hunchentoot:create-regex-dispatcher</code>\n"
"\t\tis a function that takes a regular expression for an endpoint, and\n"
"\t\truns the function named by the second argument upon&nbsp;execution.\n"
"\t\t\t\t</p>"
msgstr ""
"<p><code class=\"western\">hunchentoot:create-regex-dispatcher</code>\n"
"\t\t- это функция, которая принимает регулярное выражение для конечной \n"
"\t\tточки и запускает функцию, названную вторым аргументом, при "
"выполнении. \n"
"\t\t\t\t</p>"

#: in_ed/lispweb2.html:314
msgid ""
"\t\t<pre class=\"western\">(setq *dispatch-table*\n"
" (list\n"
"  (create-regex-dispatcher &quot;^/index&quot; 'controller-index)\n"
"  (create-regex-dispatcher &quot;^/vote&quot; 'controller-vote)\n"
"  (create-regex-dispatcher &quot;^/game-added&quot; 'controller-game-added)\n"
"  (create-regex-dispatcher &quot;^/new-game&quot; 'controller-new-game)))</"
"pre>\n"
"\t</div>\n"
"</div>\n"
"<div id=\"outline-container-sec-5\" dir=\"ltr\">\n"
"\t<h3 class=\"western\"><a name=\"sec-5\"></a>Writing CSS in&nbsp;Lisp</h3>\n"
"\t<div id=\"text-5\" dir=\"ltr\">"
msgstr ""
"\t\t<pre class=\"western\">(setq *dispatch-table*\n"
" (list\n"
"  (create-regex-dispatcher &quot;^/index&quot; 'controller-index)\n"
"  (create-regex-dispatcher &quot;^/vote&quot; 'controller-vote)\n"
"  (create-regex-dispatcher &quot;^/game-added&quot; 'controller-game-added)\n"
"  (create-regex-dispatcher &quot;^/new-game&quot; 'controller-new-game)))</"
"pre>\n"
"\t</div>\n"
"</div>\n"
"<div id=\"outline-container-sec-5\" dir=\"ltr\">\n"
"\t<h3 class=\"western\"><a name=\"sec-5\"></a>Написание CSS на Лиспе</h3>\n"
"\t<div id=\"text-5\" dir=\"ltr\">"

#: in_ed/lispweb2.html:328
msgid ""
"<p>The original tutorial never supplies the CSS it used to style\n"
"\t\tthe website. As you can see, I provided some of my own CSS to\n"
"\t\tpretty things up a bit â but you wonât see that if youâve\n"
"\t\tmade it this far into the article. Why? Because weâve overwritten\n"
"\t\tthe contents of <code class=\"western\">*dispatch-table*</code> with\n"
"\t\tthe four routes weâve defined above. What weâre going to do is\n"
"\t\tdefine another route for the CSS, but provide the CSS in a Lisp\n"
"\t\tform that then gets translated into CSS for us. This provides us a\n"
"\t\tlittle bit of flexibility and can help reduce some of the\n"
"\t\tredundancy that CSS tends to accumulate, without resorting to some\n"
"\t\tCSS extension (like <a href=\"https://web.archive.org/web/20171109223946/"
"http://sass-lang.com/\">Sass</a>\n"
"\t\tor <a href=\"https://web.archive.org/web/20171109223946/http://lesscss."
"org/\">LESS</a>).\n"
"\t\t\t\t</p>"
msgstr ""
"<p>Исходный учебник никогда не предоставляет CSS, который использовался "
"для \n"
"\t\tстилизации веб-сайта. Как видите, я предоставил некоторые из моих \n"
"\t\tсобственных CSS, чтобы немного улучшить ситуацию, но вы не увидите "
"этого, \n"
"\t\tесли зашли так далеко в статье. Почему? Потому что мы перезаписали \n"
"\t\tсодержимое <code class=\"western\">*dispatch-table*</code> четырьмя \n"
"\t\tмаршрутами, которые мы определили выше. Что мы собираемся сделать, \n"
"\t\tтак это определить другой маршрут для CSS, но предоставить CSS в форме "
"Lisp,\n"
"\t\tкоторая затем будет переведена для нас в CSS. Это дает нам некоторую \n"
"\t\tгибкость и может помочь уменьшить часть избыточности, которую CSS "
"имеет \n"
"\t\tтенденцию накапливать, не прибегая к некоторым расширениям CSS (таким \n"
"\t\tкак <a href=\"https://web.archive.org/web/20171109223946/http://sass-"
"lang.com/\">Sass</a> или <a href=\"https://web.archive.org/"
"web/20171109223946/http://lesscss.org/\">LESS</a>).\n"
"\t\t\t\t</p>"

#: in_ed/lispweb2.html:334
msgid ""
"<p>The CSS goes in a controller function, just like the other\n"
"\t\tdynamically created pages on the&nbsp;site. \n"
"\t\t</p>"
msgstr ""
"<p>CSS входит в функцию контроллера, как и другие динамически создаваемые \n"
"\t\tстраницы на сайте.  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:350
msgid ""
"\t\t<pre class=\"western\">(defun controller-css ()\n"
"  (setf (hunchentoot:content-type* hunchentoot:*reply*) &quot;text/"
"css&quot;)\n"
"  &quot;...&quot;)</pre>\n"
"<p>\n"
"\t\tWe set the <code class=\"western\">content-type</code> header to\n"
"\t\tâtext/cssâ, which lets web browsers know that the file weâre\n"
"\t\tsending is meant to be interpreted as a stylesheet. Iâve put\n"
"\t\ttogether a style, and Iâll be using some aspects of it to\n"
"\t\texemplify some points with Lisp, but youâre free to style up the\n"
"\t\tsite however youâd like. Either way, replace the ellipsis in the\n"
"\t\tcode sample above with your style. You can use your CSS verbatim,\n"
"\t\texplicitly using multiple newlines in one string. Lisp strings\n"
"\t\tunderstand multiple lines without any special&nbsp;indicator: \n"
"\t\t</p>"
msgstr ""
"\t\t<pre class=\"western\">(defun controller-css ()\n"
"  (setf (hunchentoot:content-type* hunchentoot:*reply*) &quot;text/"
"css&quot;)\n"
"  &quot;...&quot;)</pre>\n"
"<p>\n"
"\t\tМы устанавливаем  <code class=\"western\">content-type</code> \n"
"\t\tзаголовка на «text/css», что позволяет веб-браузерам знать, \n"
"\t\tчто отправляемый нами файл предназначен для интерпретации как \n"
"\t\tтаблица стилей. Я собрал стиль и буду использовать некоторые \n"
"\t\tего аспекты, чтобы проиллюстрировать некоторые моменты с помощью \n"
"\t\tLisp, но вы можете изменить стиль сайта, как хотите. В любом случае \n"
"\t\tзамените многоточие в приведенном выше примере кода своим стилем. Вы \n"
"\t\tможете использовать свой CSS дословно, явно используя несколько "
"символов \n"
"\t\tновой строки в одной строке. Строки Лиспа понимают несколько строк без \n"
"\t\tкакого-либо специального индикатора:  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:359
msgid ""
"\t\t<pre class=\"western\">(setq *some-string* &quot;This is a string that\n"
"spans\n"
"multiple\n"
"lines.&quot;)</pre>\n"
"<p>\n"
"\t\tMy CSS style is reproduced at the following link: <a href=\"https://web."
"archive.org/web/20171109223946/https://gist.github.com/1062278\">game-voter."
"css</a>\n"
"\t\t\t\t</p>"
msgstr ""
"\t\t<pre class=\"western\">(setq *some-string* &quot;This is a string that\n"
"spans\n"
"multiple\n"
"lines.&quot;)</pre>\n"
"<p>\n"
"\t\tМой стиль CSS воспроизводится по следующей ссылке: <a href=\"https://web."
"archive.org/web/20171109223946/https://gist.github.com/1062278\">game-voter."
"css</a>\n"
"\t\t\t\t</p>"

#: in_ed/lispweb2.html:371
msgid ""
"<p>Weâll be using the <a href=\"https://web.archive.org/web/20171109223946/"
"http://www.cliki.net/css-lite\">css-lite</a>\n"
"\t\tlibrary to generate our CSS. This library exposes one primary\n"
"\t\tmethod, <code class=\"western\">css</code>, which takes a list of\n"
"\t\tlists, and from them, generates our CSS. Within this list\n"
"\t\tparameter, every other list describes a set of selectors, and the\n"
"\t\tfollowing list is an associated list of css attributes to values.\n"
"\t\tMy first translation into <code class=\"western\">css-lite</code>âs\n"
"\t\tformat looks something like&nbsp;this: \n"
"\t\t</p>"
msgstr ""
"<p>Мы будем использовать библиотеку <a href=\"https://web.archive.org/"
"web/20171109223946/http://www.cliki.net/css-lite\">css-lite</a> для создания "
"нашего CSS. Эта библиотека предоставляет \n"
"\t\tодин основной метод, <code class=\"western\">css</code>, который "
"принимает \n"
"\t\tсписок списков и генерирует из них наш CSS. Внутри этого параметра "
"списка \n"
"\t\tвсе остальные списки описывают набор селекторов, а следующий список \n"
"\t\tпредставляет собой связанный список атрибутов css для значений. Мой "
"первый \n"
"\t\tперевод в формат <code class=\"western\">css-lite</code> выглядит "
"примерно так: \n"
"\t\t</p>"

#: in_ed/lispweb2.html:391
msgid ""
"\t\t<pre class=\"western\">(defun controller-css ()\n"
"  (setf (hunchentoot:content-type* hunchentoot:*reply*) &quot;text/"
"css&quot;)\n"
"  (css-lite:css\n"
"    ((&quot;body&quot;)\n"
"     (:width &quot;70%&quot; :margin &quot;0 auto&quot; :font-family &quot;"
"sans-serif&quot;\n"
"      :border-left &quot;1px solid #ccc&quot;\n"
"      :border-right &quot;1px solid #ccc&quot;\n"
"      :border-bottom &quot;1px solid #ccc&quot;))\n"
"    ((&quot;h1&quot;)\n"
"     (:font-size &quot;140%&quot; :text-align &quot;center&quot;))\n"
"    ((&quot;h2&quot;)\n"
"     (:color &quot;#000&quot; :background-color &quot;#cef&quot; :margin "
"&quot;0 auto&quot; :padding &quot;4px 0&quot;))\n"
"    ((&quot;#header&quot;)\n"
"     (:background-color &quot;#cef&quot; :padding &quot;8px&quot;))\n"
"    ((&quot;#header .logo&quot;)\n"
"      (:display &quot;block&quot; :margin &quot;0 auto&quot;))\n"
"    ((&quot;#header .strapline&quot;)\n"
"     (:display &quot;block&quot; :text-align &quot;center&quot; :font-size "
"&quot;80%&quot; :font-style &quot;italic&quot;))"
msgstr ""

#: in_ed/lispweb2.html:400
msgid ""
"    ;; and so on ...</pre>\n"
"<p>\n"
"\t\tSo the first thing that stands out is the repetition in describing\n"
"\t\tthe border for the <code class=\"western\">body</code> selector. Iâm\n"
"\t\tsure thereâs some CSS way to describe the border, but as an\n"
"\t\texample, weâre going to use a variable to encapsulate the\n"
"\t\tborder&nbsp;description. \n"
"\t\t</p>"
msgstr ""
"    ;; и так далее ...</pre>\n"
"<p>\n"
"\t\tИтак, первое, что бросается в глаза, - это повторение описания "
"border(границы)\n"
"\t\tдля селектора <code class=\"western\">body</code>(тела). Я уверен, что "
"есть \n"
"\t\tкакой-нибудь способ описания границы с помощью CSS, но в качестве "
"примера \n"
"\t\tмы собираемся использовать переменную для инкапсуляции описания "
"границы. \n"
"\t\t</p>"

#: in_ed/lispweb2.html:412
msgid ""
"\t\t<pre class=\"western\">(let ((border &quot;1px solid #ccc&quot;))\n"
"  (css-lite:css ((&quot;body&quot;)\n"
"                 (:border-left border\n"
"                  :border-right border\n"
"                  :border-bottom border))))</pre>\n"
"<p>\n"
"\t\tSimple enough, but what if we wanted to reduce some more\n"
"\t\tcomplicated piece of CSS? For example, some CSS3 attributes that\n"
"\t\tare initialized differently for each&nbsp;browser? \n"
"\t\t</p>"
msgstr ""
"\t\t<pre class=\"western\">(let ((border &quot;1px solid #ccc&quot;))\n"
"  (css-lite:css ((&quot;body&quot;)\n"
"                 (:border-left border\n"
"                  :border-right border\n"
"                  :border-bottom border))))</pre>\n"
"<p>\n"
"\t\tДостаточно просто, но что, если мы захотим сократить какой-то \n"
"\t\tболее сложный фрагмент CSS? Например, некоторые атрибуты CSS3, \n"
"\t\tкоторые инициализируются по-разному для каждого браузера?\n"
"\n"
"\t\t</p>"

#: in_ed/lispweb2.html:421
msgid ""
"<p>The gradient property currently has several different\n"
"\t\timplementations. Here are the selectors provided by a popular CSS3\n"
"\t\tgradient generator, Alex Sirotaâs excellent and comprehensive\n"
"\t\t<a href=\"https://web.archive.org/web/20171109223946/http://www."
"colorzilla.com/gradient-editor/\">Ultimate\n"
"\t\tCSS Gradient Generator</a>: \n"
"\t\t</p>"
msgstr ""
"<p>Свойство gradient в настоящее время имеет несколько различных "
"реализаций. \n"
"\t\tВот селекторы, предоставляемые популярным генератором градиентов CSS3, \n"
"\t\tотличным и всеобъемлющим <a href=\"https://web.archive.org/"
"web/20171109223946/http://www.colorzilla.com/gradient-editor/\">Ultimate CSS "
"Gradient Generator</a> от Алекса Сироты: \n"
"\t\t</p>"

#: in_ed/lispweb2.html:435
msgid ""
"\t\t<pre class=\"western\">background: #1e5799; /* Old browsers */\n"
"background: -moz-linear-gradient(top, #1e5799 0%, #2989d8 50%, #207cca 51%, "
"#7db9e8 100%); /* FF3.6+ */\n"
"background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,"
"#1e5799), color-stop(50%,#2989d8), color-stop(51%,#207cca), color-stop(100%,"
"#7db9e8)); /* Chrome,Safari4+ */\n"
"background: -webkit-linear-gradient(top, #1e5799 0%,#2989d8 50%,#207cca 51%,"
"#7db9e8 100%); /* Chrome10+,Safari5.1+ */\n"
"background: -o-linear-gradient(top, #1e5799 0%,#2989d8 50%,#207cca 51%,"
"#7db9e8 100%); /* Opera11.10+ */\n"
"background: -ms-linear-gradient(top, #1e5799 0%,#2989d8 50%,#207cca 51%,"
"#7db9e8 100%); /* IE10+ */\n"
"background: linear-gradient(top, #1e5799 0%,#2989d8 50%,#207cca 51%,#7db9e8 "
"100%); /* W3C */</pre>\n"
"<p>\n"
"\t\tWhat weâd like to do is describe our CSS as having a gradient,\n"
"\t\tand having Lisp do the work of translating it into all the browsers\n"
"\t\tthat we want to&nbsp;support. \n"
"\t\t</p>"
msgstr ""
"\t\t<pre class=\"western\">background: #1e5799; /* Old browsers */\n"
"background: -moz-linear-gradient(top, #1e5799 0%, #2989d8 50%, #207cca 51%, "
"#7db9e8 100%); /* FF3.6+ */\n"
"background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,"
"#1e5799), color-stop(50%,#2989d8), color-stop(51%,#207cca), color-stop(100%,"
"#7db9e8)); /* Chrome,Safari4+ */\n"
"background: -webkit-linear-gradient(top, #1e5799 0%,#2989d8 50%,#207cca 51%,"
"#7db9e8 100%); /* Chrome10+,Safari5.1+ */\n"
"background: -o-linear-gradient(top, #1e5799 0%,#2989d8 50%,#207cca 51%,"
"#7db9e8 100%); /* Opera11.10+ */\n"
"background: -ms-linear-gradient(top, #1e5799 0%,#2989d8 50%,#207cca 51%,"
"#7db9e8 100%); /* IE10+ */\n"
"background: linear-gradient(top, #1e5799 0%,#2989d8 50%,#207cca 51%,#7db9e8 "
"100%); /* W3C */</pre>\n"
"<p>\n"
"\t\tЧто мы хотим сделать, так это описать наш CSS как имеющий градиент, \n"
"\t\tа Lisp сделает работу по его переводу во все браузеры, которые мы \n"
"\t\tхотим поддерживать.\n"
"\t\t</p>"

#: in_ed/lispweb2.html:443
msgid ""
"<p>The first thing to observe is that a lot of the rules use the\n"
"\t\tsame basic format â that of the W3C recommendation. It should be\n"
"\t\teasy to apply those rules while just changing the name of the CSS\n"
"\t\tfunction. Two other things that should jump out at you&nbsp;are: \n"
"\t\t</p>"
msgstr ""
"<p>Первое, на что следует обратить внимание, это то, что многие правила \n"
"\t\tиспользуют один и тот же базовый формат - формат рекомендации W3C. \n"
"\t\tЭти правила должно быть легко применить, просто изменив имя функции "
"CSS. \n"
"\t\tДве другие вещи, которые должны вам броситься в глаза: \n"
"\t\t</p>"

#: in_ed/lispweb2.html:451
msgid ""
"\t\t<ul>\n"
"\t\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\">We should use a fallthrough\n"
"\t\t\tbackground of the first color in the pattern for browsers that\n"
"\t\t\tdonât support the gradient at&nbsp;all. \n"
"\t\t\t</p>"
msgstr ""
"\t\t<ul>\n"
"\t\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\">Мы должны использовать спадающий фон первого "
"цвета \n"
"\t\tв шаблоне для браузеров, которые вообще не поддерживают градиент.\n"
"\t\t\t</p>"

#: in_ed/lispweb2.html:454
msgctxt "in_ed/lispweb2.html:454"
msgid "\t\t\t<li/>"
msgstr ""

#: in_ed/lispweb2.html:459
msgid ""
"<p>The <code class=\"western\">-webkit-gradient</code> rule\n"
"\t\t\treverses the order of the arguments: instead of taking a color and\n"
"\t\t\ta percentage, it takes a percentage and a&nbsp;color. \n"
"\t\t\t</p>"
msgstr ""
"<p> Правило <code class=\"western\">-webkit-gradient</code> меняет порядок \n"
"\t\tаргументов на обратный: вместо цвета и процента оно \n"
"\t\tпринимает процент и цвет.  \n"
"\t\t\t</p>"

#: in_ed/lispweb2.html:462
msgctxt "in_ed/lispweb2.html:462"
msgid "\t\t</ul>"
msgstr ""

#: in_ed/lispweb2.html:469
msgid ""
"<p>The function should return a flattened list of CSS selectors and\n"
"\t\tvalues. We then pass it to an internal <code class=\"western\">css-lite</"
"code>\n"
"\t\tfunction, <code class=\"western\">make-css-function</code>, with an\n"
"\t\tidentifier that we can use in the <code class=\"western\">css</code>\n"
"\t\tmacro. \n"
"\t\t</p>"
msgstr ""
"<p>Функция должна возвращать плоский список селекторов и значений CSS. \n"
"\t\tЗатем мы передаем его внутренней функции <code class=\"western\">css-"
"lite</code>,\n"
"\t\t<code class=\"western\">make-css-function</code>, с идентификатором, \n"
"\t\tкоторый мы можем использовать в макросе <code class=\"western\">css</"
"code>. \n"
"\t\t</p>"

#: in_ed/lispweb2.html:486
msgid ""
"\t\t<pre class=\"western\">(defun css-linear-gradient (colors-and-"
"positions)\n"
"  (let ((default-background (caar colors-and-positions)))\n"
"    (flet ((w3c-spec (name)\n"
"             (format nil &quot;~A(top, ~{~{~A ~A%~}~^, ~})&quot; name colors-"
"and-positions))\n"
"           (webkit-gradient ()\n"
"             (format nil &quot;-webkit-gradient(linear, left top, left "
"bottom, ~{color-stop(~{~A%, ~A~})~^, ~})&quot;\n"
"               (mapcar #'reverse colors-and-positions))))\n"
"      (list\n"
"       :background default-background\n"
"       :background (w3c-spec &quot;-moz-linear-gradient&quot;)\n"
"       :background (webkit-gradient)\n"
"       :background (w3c-spec &quot;-webkit-linear-gradient&quot;)\n"
"       :background (w3c-spec &quot;-o-linear-gradient&quot;)\n"
"       :background (w3c-spec &quot;-ms-linear-gradient&quot;)\n"
"       :background (w3c-spec &quot;linear-gradient&quot;)))))"
msgstr ""

#: in_ed/lispweb2.html:493
msgid ""
"(css-lite::make-css-func\n"
"  linear-gradient (colors-and-positions) (css-linear-gradient colors-and-"
"positions))</pre>\n"
"<p>\n"
"\t\tThis works roughly the way we expect, generating the different\n"
"\t\tcombinations of gradient methods&nbsp;above. \n"
"\t\t</p>"
msgstr ""
"(css-lite::make-css-func\n"
"  linear-gradient (colors-and-positions) (css-linear-gradient colors-and-"
"positions))</pre>\n"
"<p>\n"
"\t\tЭто работает примерно так, как мы ожидаем, создавая различные \n"
"\t\tкомбинации методов градиента, описанных выше. \n"
"\t\t</p>"

#: in_ed/lispweb2.html:503
msgid ""
"\t\t<pre class=\"western\">(css-lite:css\n"
"  ((&quot;body&quot;)\n"
"   (linear-gradient '((&quot;#1e5799&quot; 0) (&quot;#2989d8&quot; 50) "
"(&quot;#207cca&quot; 51) (&quot;#7db9e8&quot; 100)))))</pre>\n"
"\t</div>\n"
"</div>\n"
"<div id=\"outline-container-sec-6\" dir=\"ltr\">\n"
"\t<h3 class=\"western\"><a name=\"sec-6\"></a>Using&nbsp;jQuery</h3>\n"
"\t<div id=\"text-6\" dir=\"ltr\">"
msgstr ""
"\t\t<pre class=\"western\">(css-lite:css\n"
"  ((&quot;body&quot;)\n"
"   (linear-gradient '((&quot;#1e5799&quot; 0) (&quot;#2989d8&quot; 50) "
"(&quot;#207cca&quot; 51) (&quot;#7db9e8&quot; 100)))))</pre>\n"
"\t</div>\n"
"</div>\n"
"<div id=\"outline-container-sec-6\" dir=\"ltr\">\n"
"\t<h3 class=\"western\"><a name=\"sec-6\"></a>Использование&nbsp;jQuery</"
"h3>\n"
"\t<div id=\"text-6\" dir=\"ltr\">"

#: in_ed/lispweb2.html:511
msgid ""
"<p>The original article used some Javascript to prevent the user\n"
"\t\tfrom submitting the Game submission form if they tried entering the\n"
"\t\tempty string for the name of the game. It was written in\n"
"\t\t<code class=\"western\">parenscript</code>, a library that translates\n"
"\t\tLisp code into the appropriate JavaScript. It was a fairly\n"
"\t\trudimentary implementation, reproduced&nbsp;below: \n"
"\t\t</p>"
msgstr ""
"<p>В исходной статье использовался некоторый Javascript, чтобы запретить\n"
"\t\tпользователю отправлять форму отправки игры, если они пытались \n"
"\t\tввести пустую строку для названия игры. Он был написан на \n"
"\t\t<code class=\"western\">parenscript</code>, библиотеке, которая "
"переводит \n"
"\t\tкод Lisp в соответствующий JavaScript. Это была довольно \n"
"\t\tпримитивная реализация, воспроизведенная ниже:  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:527
msgid ""
"\t\t<pre class=\"western\">GAME-VOTER&gt; (ps-inline\n"
"             (when (= name.value &quot;&quot;)\n"
"               (alert &quot;Please enter a name.&quot;)\n"
"               (return false)))\n"
"&quot;javascript:if (name.value === \\&quot;\\&quot;) {\n"
"    alert(\\&quot;Please enter a name.\\&quot;);\n"
"    return false;\n"
"}&quot;</pre>\n"
"<p>\n"
"\t\tModal alert boxes such at this one arenât a horrible idea, but\n"
"\t\tthereâs a more elegant, expected way to handle this sort of\n"
"\t\tbehavior: display an inline message to the user on form submission;\n"
"\t\tand what better way to do that than&nbsp;jQuery? \n"
"\t\t</p>"
msgstr ""
"\t\t<pre class=\"western\">GAME-VOTER&gt; (ps-inline\n"
"             (when (= name.value &quot;&quot;)\n"
"               (alert &quot;Please enter a name.&quot;)\n"
"               (return false)))\n"
"&quot;javascript:if (name.value === \\&quot;\\&quot;) {\n"
"    alert(\\&quot;Please enter a name.\\&quot;);\n"
"    return false;\n"
"}&quot;</pre>\n"
"<p>\n"
"\t\tТакие модальные окна предупреждений не являются ужасной идеей, \n"
"\t\tно есть более элегантный и ожидаемый способ справиться с таким \n"
"\t\tповедением: отображать встроенное сообщение для пользователя при \n"
"\t\tотправке формы; и что может быть лучше, чем jQuery? \n"
"\t\t</p>"

#: in_ed/lispweb2.html:537
msgid ""
"<p>Parenscript is a fantastic library, but it may require some\n"
"\t\tthought and time to get accustomed to its idioms. Most of them make\n"
"\t\tsense in retrospect, but not before youâve used them for a while.\n"
"\t\tThe good news is, it works perfectly with jQuery once youâve put\n"
"\t\tthis work in, and Lisp macros can help bridge the gap and make your\n"
"\t\tlife&nbsp;easier. \n"
"\t\t</p>"
msgstr ""
"<p>Parenscript - фантастическая библиотека, но может потребоваться некоторое "
"время \n"
"\t\tи размышления, чтобы привыкнуть к ее идиомам. Большинство из них имеют \n"
"\t\tсмысл в ретроспективе, но не раньше, чем вы ими воспользуетесь какое-то "
"время.\n"
"\t\tХорошая новость в том, что он отлично работает с jQuery после того, как "
"вы\n"
"\t\tпоработали над этим, а макросы Lisp могут помочь преодолеть пробел и "
"облегчить \n"
"\t\tвам жизнь.  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:551
msgid ""
"<p>The primary macro used with Parenscript is <code class=\"western\">ps</"
"code>,\n"
"\t\tespecially if youâll be injecting the contents of your code\n"
"\t\tdirectly into <code class=\"western\">&lt;script&gt;</code> tags.\n"
"\t\tMost of Parenscript consists of âtranslatorsâ of a kind,\n"
"\t\tturning lisp forms into the appropriate Javascript verbiage. The\n"
"\t\t<a href=\"https://web.archive.org/web/20171109223946/http://common-lisp."
"net/project/parenscript/reference.html\">Parenscript\n"
"\t\treference</a> is the canonical bible of these translations,\n"
"\t\tsuccinctly explaining all of these rules and how they may be\n"
"\t\tapplied. For now we will take a look at the ones that are relevant\n"
"\t\tto&nbsp;us. \n"
"\t\t</p>"
msgstr ""
"<p>Основной макрос, используемый с Parenscript, - это <code class=\"western"
"\">ps</code>, \n"
"\t\tособенно если вы будете вставлять содержимое вашего кода "
"непосредственно \n"
"\t\tв теги <code class=\"western\">&lt;script&gt;</code>. Большая часть "
"Parenscript\n"
"\t\tсостоит из своего рода translators(преобразователей), превращающих \n"
"\t\tлисп-формы в соответствующее многословие Javascript. <a href=\"https://"
"web.archive.org/web/20171109223946/http://common-lisp.net/project/"
"parenscript/reference.html\">Ссылка на Parenscript</a> - это каноническая "
"библия этих преобразований, \n"
"\t\tв которой кратко объясняются все эти правила и то, как они могут "
"применяться. \n"
"\t\tА пока мы рассмотрим те, которые имеют отношение к нам. \n"
"\t\t</p>"

#: in_ed/lispweb2.html:556
msgid ""
"<p>Simple functions have their obvious&nbsp;counterparts. \n"
"\t\t</p>"
msgstr ""
"<p>У простых функций есть очевидные аналоги.  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:559
msgid "\t\t<pre class=\"western\">GAME-VOTER&gt; (ps (+ 1 2))"
msgstr ""

#: in_ed/lispweb2.html:569
msgid ""
"&quot;1 + 2;&quot;</pre>\n"
"<p>\n"
"\t\tAttempting to call a function by name is similarly obvious. Itâs\n"
"\t\talso here that weâre pointing out one of Parenscriptâs\n"
"\t\ttransformative properties: to take hyphenated symbols and turn them\n"
"\t\tinto a valid Javascript identifier, capitalizing the letters right\n"
"\t\tafter the hyphens. This is a necessary change as symbols in Lisp\n"
"\t\tare interned in all&nbsp;capitals. \n"
"\t\t</p>"
msgstr ""
"&quot;1 + 2;&quot;</pre>\n"
"<p>\n"
"\t\tПопытка вызвать функцию по имени также очевидна. Именно здесь \n"
"\t\tмы указываем на одно из преобразующих свойств Parenscript: брать \n"
"\t\tсимволы с дефисом и превращать их в действительный идентификатор \n"
"\t\tJavascript, используя заглавные буквы сразу после дефисов. Это \n"
"\t\tнеобходимое изменение, поскольку символы в Лиспе заключены в \n"
"\t\tзаглавные буквы.  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:572
msgid "\t\t<pre class=\"western\">GAME-VOTER&gt; (ps (makeFunnyNoise))"
msgstr ""

#: in_ed/lispweb2.html:574
msgid "&quot;makefunnynoise();&quot;"
msgstr ""

#: in_ed/lispweb2.html:576
msgid "GAME-VOTER&gt; (ps (make-funny-noise))"
msgstr ""

#: in_ed/lispweb2.html:583
msgid ""
"&quot;makeFunnyNoise();&quot;</pre>\n"
"<p>\n"
"\t\tMost jQuery programming is accomplished by the passing of anonymous\n"
"\t\tfunctions. In Parenscript, these functions are created through â\n"
"\t\thow else? â the use of <code class=\"western\">lambda</code>. \n"
"\t\t</p>"
msgstr ""
"&quot;makeFunnyNoise();&quot;</pre>\n"
"<p>\n"
"\t\tБольшая часть программирования jQuery выполняется путем передачи \n"
"\t\tанонимных функций. В Parenscript эти функции создаются через - \n"
"\t\tА как иначе? - использование лямбды(<code class=\"western\">lambda</"
"code>). \n"
"\t\t</p>"

#: in_ed/lispweb2.html:586
msgid ""
"\t\t<pre class=\"western\">GAME-VOTER&gt; (ps (lambda (foo bar) (+ foo bar)))"
msgstr ""

#: in_ed/lispweb2.html:597
msgid ""
"&quot;function (foo, bar) {\n"
"    return foo + bar;\n"
"};&quot;</pre>\n"
"<p>\n"
"\t\tVariables may be defined in various ways; the way that makes the\n"
"\t\tmost sense to us is the use of a <code class=\"western\">let</code>\n"
"\t\tbinding, which works in much the way youâd expect. This is the\n"
"\t\tbest part of Parenscript: it is predictable. You donât have to\n"
"\t\talter many habits to start using&nbsp;it. \n"
"\t\t</p>"
msgstr ""
"&quot;function (foo, bar) {\n"
"    return foo + bar;\n"
"};&quot;</pre>\n"
"<p>\n"
"\t\tПеременные можно определять по-разному; наиболее разумным для нас \n"
"\t\tспособом является использование привязки <code class=\"western\">let</"
"code>, \n"
"\t\tкоторая работает во многом так, как вы ожидаете. Это лучшая часть "
"Parenscript: \n"
"\t\tона предсказуема. Вам не нужно менять многие привычки, чтобы начать её\n"
"\t\tиспользовать.  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:600
msgid ""
"\t\t<pre class=\"western\">GAME-VOTER&gt; (ps (let ((a 1) (b 2)) (+ a b)))"
msgstr ""

#: in_ed/lispweb2.html:608
msgid ""
"&quot;var a = 1;\n"
"var b = 2;\n"
"a + b;&quot;</pre>\n"
"<p>\n"
"\t\tObjects can be created with the <code class=\"western\">create</code>\n"
"\t\toperator. \n"
"\t\t</p>"
msgstr ""
"&quot;var a = 1;\n"
"var b = 2;\n"
"a + b;&quot;</pre>\n"
"<p>\n"
"\t\tОбъекты можно создавать с помощью оператора \n"
"\t\t<code class=\"western\">create</code>. \n"
"\t\t</p>"

#: in_ed/lispweb2.html:611
msgid ""
"\t\t<pre class=\"western\">GAME-VOTER&gt; (ps (create :url &quot;http://"
"example.com&quot;))"
msgstr ""

#: in_ed/lispweb2.html:623
msgid ""
"&quot;{ 'url' : 'http://example.com' };&quot;</pre>\n"
"<p>\n"
"\t\tIf we had a (Javascript) Object named <code class=\"western\">foo</"
"code>,\n"
"\t\tand wanted to call its <code class=\"western\">bar</code> function,\n"
"\t\twe would have to use the âchainâ operator in Parenscript,\n"
"\t\tdenoted by the <code class=\"western\">@</code> symbol. We then\n"
"\t\tsurround the chain operator with another set of parentheses to\n"
"\t\tindicate that we are calling the result. This is where we also show\n"
"\t\tyou that any not-understood symbol is left unmolested, such as <code "
"class=\"western\">foo</code>\n"
"\t\tand <code class=\"western\">bar</code>. \n"
"\t\t</p>"
msgstr ""
"&quot;{ 'url' : 'http://example.com' };&quot;</pre>\n"
"<p>\n"
"\t\tЕсли бы у нас был объект (Javascript) с именем <code class=\"western"
"\">foo</code>\n"
"\t\tи мы хотели бы вызвать его функцию <code class=\"western\">bar</code>, \n"
"\t\tнам пришлось бы использовать оператор «chain/цепочки» в Parenscript, \n"
"\t\tобозначаемый символом <code class=\"western\">@</code>. Затем мы "
"заключаем \n"
"\t\tоператор цепочки в другие круглые скобки, чтобы указать, что мы "
"вызываем\n"
"\t\tрезультат. Здесь мы также показываем вам, что любой непонятный символ, \n"
"\t\tнапример,  <code class=\"western\">foo</code> и\n"
"\t\t<code class=\"western\">bar</code>, остается неизменным.. \n"
"\t\t</p>"

#: in_ed/lispweb2.html:626
msgid "\t\t<pre class=\"western\">GAME-VOTER&gt; (ps (@ foo bar))"
msgstr ""

#: in_ed/lispweb2.html:628
msgid "&quot;foo.bar;&quot;"
msgstr ""

#: in_ed/lispweb2.html:630
msgid "GAME-VOTER&gt; (ps ((@ foo bar)))"
msgstr ""

#: in_ed/lispweb2.html:638
msgid ""
"&quot;foo.bar();&quot;</pre>\n"
"<p>\n"
"\t\tThis is one of the ways that we would need to access jQuery core\n"
"\t\tfunction, i.e. to call functions hanging directly off of it, such\n"
"\t\tas <code class=\"western\">$.ajax()</code>. Parameters can be put\n"
"\t\tinto the outer parentheses of the chained&nbsp;call. \n"
"\t\t</p>"
msgstr ""
"&quot;foo.bar();&quot;</pre>\n"
"<p>\n"
"\t\tЭто один из способов, которым мы можем получить доступ к \n"
"\t\tосновной функции jQuery, т.е. вызвать функции, висящие \n"
"\t\tнепосредственно от него, такие как <code class=\"western\">$.ajax()</"
"code>. \n"
"\t\tПараметры можно поместить во внешние скобки связанного вызова.  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:641
msgid "\t\t<pre class=\"western\">GAME-VOTER&gt; (ps ((@ $ ajax)))"
msgstr ""

#: in_ed/lispweb2.html:643
msgid "&quot;$.ajax();&quot;"
msgstr ""

#: in_ed/lispweb2.html:645
msgid ""
"GAME-VOTER&gt; (ps ((@ $ ajax) (create :url &quot;http://example.com&quot;)))"
msgstr ""

#: in_ed/lispweb2.html:651
msgid ""
"&quot;$.ajax({ 'url' : 'http://example.com' });&quot;</pre>\n"
"<p>\n"
"\t\tThe other way is to call the jQuery selector, for manipulating\n"
"\t\telements on the&nbsp;page. \n"
"\t\t</p>"
msgstr ""
"&quot;$.ajax({ 'url' : 'http://example.com' });&quot;</pre>\n"
"<p>\n"
"\t\tДругой способ - вызвать селектор jQuery для управления элементами \n"
"\t\tна странице. \n"
"\t\t</p>"

#: in_ed/lispweb2.html:654
msgid ""
"\t\t<pre class=\"western\">GAME-VOTER&gt; (ps ((@ ($ &quot;div.foo&quot;) "
"fade-in)))"
msgstr ""

#: in_ed/lispweb2.html:660
msgid ""
"&quot;$('div.foo').fadeIn();&quot;</pre>\n"
"<p>\n"
"\t\tWith all these things in mind, letâs take a look at the jQuery we\n"
"\t\twant to produce on the&nbsp;page: \n"
"\t\t</p>"
msgstr ""
"&quot;$('div.foo').fadeIn();&quot;</pre>\n"
"<p>\n"
"\t\tИмея в виду все это, давайте взглянем на jQuery, который \n"
"\t\tмы хотим создать на странице:  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:674
msgid ""
"\t\t<pre class=\"western\">$(document).ready(function () {\n"
"    $('input.btn').click(function () {\n"
"        var text = $('input.txt').val().trim();\n"
"        if (text == '') {\n"
"            $('#error').fadeIn();\n"
"            return false;\n"
"        };\n"
"    });\n"
"});</pre>\n"
"<p>\n"
"\t\tThis is my first go at translating it into&nbsp;Parenscript. \n"
"\t\t</p>"
msgstr ""
"\t\t<pre class=\"western\">$(document).ready(function () {\n"
"    $('input.btn').click(function () {\n"
"        var text = $('input.txt').val().trim();\n"
"        if (text == '') {\n"
"            $('#error').fadeIn();\n"
"            return false;\n"
"        };\n"
"    });\n"
"});</pre>\n"
"<p>\n"
"\t\tЭто моя первая попытка перевести это в Parenscript.  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:691
msgid ""
"\t\t<pre class=\"western\">GAME-VOTER&gt; (ps ((@ ($ document) ready)\n"
"                 (lambda ()\n"
"                   ((@ ($ &quot;input.btn&quot;) click)\n"
"                    (lambda ()\n"
"                      (let ((text (chain ($ &quot;input.txt&quot;) (val) "
"(trim))))\n"
"                        (cond ((equal text &quot;&quot;) \n"
"                               ((@ ($ &quot;#error&quot;) fade-in))\n"
"                               (return false)))))))))</pre>\n"
"<p>\n"
"\t\tWe have some duplication with the code required to prepare an event\n"
"\t\thandler: two lines for <code class=\"western\">document.ready</code>\n"
"\t\tand two lines for <code class=\"western\">$(&quot;input.btn&quot;)."
"click</code>.\n"
"\t\tUsing Parenscript, we can write a Lisp macro and âinstallâ it\n"
"\t\tinto Parenscriptâs translator, like&nbsp;so. \n"
"\t\t</p>"
msgstr ""
"\t\t<pre class=\"western\">GAME-VOTER&gt; (ps ((@ ($ document) ready)\n"
"                 (lambda ()\n"
"                   ((@ ($ &quot;input.btn&quot;) click)\n"
"                    (lambda ()\n"
"                      (let ((text (chain ($ &quot;input.txt&quot;) (val) "
"(trim))))\n"
"                        (cond ((equal text &quot;&quot;) \n"
"                               ((@ ($ &quot;#error&quot;) fade-in))\n"
"                               (return false)))))))))</pre>\n"
"<p>\n"
"\t\tУ нас есть дублирование кода, необходимого для подготовки \n"
"\t\tобработчика событий: две строки для <code class=\"western\">document."
"ready</code>\n"
"\t\tи две строки для <code class=\"western\">$(&quot;input.btn&quot;).click</"
"code>.\n"
"\t\tИспользуя Parenscript, мы можем написать макрос Lisp и «установить» "
"его \n"
"\t\tв преобразователь/переводчик Parenscript, вот так.  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:695
msgid ""
"\t\t<pre class=\"western\">(defmacro $$ ((selector event-binding) &amp;body "
"body)\n"
"  =((@ ($ ,selector) ,event-binding) (lambda () ,@body)))"
msgstr ""

#: in_ed/lispweb2.html:703
msgid ""
"(import-macros-from-lisp '$$)</pre>\n"
"<p>\n"
"\t\t<code class=\"western\">import-macros-from-lisp</code> is described\n"
"\t\tin the <a href=\"https://web.archive.org/web/20171109223946/http://"
"common-lisp.net/project/parenscript/reference.html#section-macros\">macro\n"
"\t\tsection</a> of the Parenscript documentation. This allows our\n"
"\t\tsecond attempt to be a lot&nbsp;cleaner. \n"
"\t\t</p>"
msgstr ""
"(import-macros-from-lisp '$$)</pre>\n"
"<p>\n"
"\t\t<code class=\"western\">import-macros-from-lisp</code> описан в \n"
"\t\t<a href=\"https://web.archive.org/web/20171109223946/http://common-lisp."
"net/project/parenscript/reference.html#section-macros\">разделе макросов</a> "
"документации Parenscript.\n"
"\t\tЭто позволяет сделать нашу вторую попытку намного чище/понятнее.  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:716
msgid ""
"\t\t<pre class=\"western\">GAME-VOTER&gt; (ps ($$ (document ready)\n"
"                  ($$ (&quot;input.btn&quot; click)\n"
"                    (let ((text (chain ($ &quot;input.txt&quot;) (val) "
"(trim))))\n"
"                      (cond ((equal text &quot;&quot;) \n"
"                             ((@ ($ &quot;#error&quot;) fade-in))\n"
"                             (return false)))))))</pre>\n"
"\t</div>\n"
"</div>\n"
"<div id=\"outline-container-sec-7\" dir=\"ltr\">\n"
"\t<h3 class=\"western\"><a name=\"sec-7\"></a>Writing a Test&nbsp;Suite</"
"h3>\n"
"\t<div id=\"text-7\" dir=\"ltr\">"
msgstr ""
"\t\t<pre class=\"western\">GAME-VOTER&gt; (ps ($$ (document ready)\n"
"                  ($$ (&quot;input.btn&quot; click)\n"
"                    (let ((text (chain ($ &quot;input.txt&quot;) (val) "
"(trim))))\n"
"                      (cond ((equal text &quot;&quot;) \n"
"                             ((@ ($ &quot;#error&quot;) fade-in))\n"
"                             (return false)))))))</pre>\n"
"\t</div>\n"
"</div>\n"
"<div id=\"outline-container-sec-7\" dir=\"ltr\">\n"
"\t<h3 class=\"western\"><a name=\"sec-7\"></a>Написание набора тестов</h3>\n"
"\t<div id=\"text-7\" dir=\"ltr\">"

#: in_ed/lispweb2.html:729
msgid ""
"<p>By this point, your little web application should be looking\n"
"\t\tpretty fantastic. Itâs simple, but powerful and extensible. The\n"
"\t\trefactoring weâve done, while fairly cursory, has gone a long way\n"
"\t\tto making sure that more work on the system is possible and easy.\n"
"\t\tThereâs one section where weâre lacking, however, and thatâs\n"
"\t\ta test suite. Most programmers today have gotten onboard the unit\n"
"\t\ttesting bus in some capacity or another. It is possible to go\n"
"\t\toverboard â my feeling is that test suites should contain\n"
"\t\tabsurdly small amounts of logic, and be comprised of one or two\n"
"\t\tassertions per unit test. Even then, itâs very easy to start\n"
"\t\ttesting the wrong behavior, or writing specious&nbsp;tests. \n"
"\t\t</p>"
msgstr ""
"<p>К этому моменту ваше маленькое веб-приложение должно выглядеть "
"фантастически. \n"
"\t\tОно простое, но мощное и расширяемое. Проведенный нами рефакторинг, \n"
"\t\tхотя и довольно поверхностный, в значительной степени позволил \n"
"\t\tсделать дальнейшую работу над системой возможной и легкой. \n"
"\t\tОднако есть один раздел, которого нам не хватает, - это набор тестов. \n"
"\t\tСегодня большинство программистов в той или иной степени задействовано \n"
"\t\tпо линии модульного тестирования. Можно оказаться за бортом - я "
"считаю, \n"
"\t\tчто наборы тестов должны содержать абсурдно малое количество логики и \n"
"\t\tсостоять из одного или двух утверждений на единичный тест. Даже в этом \n"
"\t\tслучае очень легко начать тестирование неправильного поведения или \n"
"\t\tнаписание надуманных тестов. \n"
"\t\t</p>"

#: in_ed/lispweb2.html:736
msgid ""
"<p>With these thoughts in mind, weâre going to write a small,\n"
"\t\tefffective test suite. We will be doing so using the <a href=\"https://"
"web.archive.org/web/20171109223946/http://common-lisp.net/project/bese/"
"FiveAM.html\">FiveAM</a>\n"
"\t\tlibrary. FiveAM is attractive for a few&nbsp;reasons: \n"
"\t\t</p>"
msgstr ""
"<p>Имея в виду эти мысли, мы собираемся написать небольшой эффективный набор "
"тестов. \n"
"\t\tМы будем делать это с помощью библиотеки <a href=\"https://web.archive."
"org/web/20171109223946/http://common-lisp.net/project/bese/FiveAM.html"
"\">FiveAM</a>. FiveAM \n"
"\t\tпривлекателен по нескольким причинам:  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:744
msgid ""
"\t\t<ul>\n"
"\t\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\">It encapsulates tests into\n"
"\t\t\tlogical units, called <b>suites</b>, much like functions, macros,\n"
"\t\t\tand classes are broken up into&nbsp;packages. \n"
"\t\t\t</p>"
msgstr ""
"\t\t<ul>\n"
"\t\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\">Он инкапсулирует тесты в логические блоки, \n"
"\t\t\tназываемые <b>suites</b>(наборами, сюитами, свитами), подобно тому, \n"
"\t\t\tкак функции, макросы и классы разбиты на пакеты.\n"
"\t\t\t</p>"

#: in_ed/lispweb2.html:753
msgid ""
"\t\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\">The assertion operator is\n"
"\t\t\tsimple. <code class=\"western\">is</code> takes a form and if the\n"
"\t\t\tform evalutates to non-nil, then the assertion passes. If the form\n"
"\t\t\tevaluates to <code class=\"western\">nil</code>, the\n"
"\t\t\tassertion&nbsp;fails. \n"
"\t\t\t</p>"
msgstr ""
"\t\t\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"> Оператор утверждения is прост. <code class="
"\"western\">is</code>\n"
"\t\t\tпринимает форму, и если ее результат не равен nil, утверждение "
"проходит.\n"
"\t\t\tЕсли форма вычисляется в <code class=\"western\">nil</code>,\n"
"\t\t\tassertion(утверждение) не выполняется. \n"
"\t\t\t</p>"

#: in_ed/lispweb2.html:756
msgctxt "in_ed/lispweb2.html:756"
msgid "\t\t\t<li/>"
msgstr ""

#: in_ed/lispweb2.html:763
msgid ""
"<p>It allows for the use of a wrapping macro called a\n"
"\t\t\t<b>fixture</b>. While other testing suites use the term âfixtureâ\n"
"\t\t\tto describe pre-constructed data, such as records in a database,\n"
"\t\t\tFiveAM extends the notion to include the setup and teardown\n"
"\t\t\tof&nbsp;tests. \n"
"\t\t\t</p>"
msgstr ""
"<p>Это позволяет использовать обертывающий макрос, называемый <b>fixture</"
"b>(приспособление). \n"
"\t\t\tВ то время как в других сюитах тестирования используется термин \t\t"
"\t<b>fixture</b> для описания заранее сконструированных данных, \n"
"\t\t\tтаких как записи в базе данных, FiveAM расширяет это понятие, включая\n"
"\t\t\tнастройку и разборку тестов.  \n"
"\t\t\t</p>"

#: in_ed/lispweb2.html:766
msgctxt "in_ed/lispweb2.html:766"
msgid "\t\t</ul>"
msgstr ""

#: in_ed/lispweb2.html:773
msgid ""
"<p>The first thing you should do is create a place to put the\n"
"\t\ttests. Off of my main directory, Iâve simply touched\n"
"\t\t<code class=\"western\">test/test-game-voter.lisp</code>.\n"
"\t\t<code class=\"western\">test-game-voter</code> will be another\n"
"\t\tpackage, so declare&nbsp;it: \n"
"\t\t</p>"
msgstr ""
"<p>Первое, что вам нужно сделать, это создать место для проведения тестов. \n"
"\t\t\tВне основного каталога я просто создал(с помощью touch) \n"
"\t\t\t<code class=\"western\">test/test-game-voter.lisp</code>. \n"
"\t\t\t<code class=\"western\">test-game-voter</code> будет другим пакетом, \n"
"\t\t\tпоэтому объявите его:  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:777
msgid ""
"\t\t<pre class=\"western\">(defpackage test-game-voter\n"
"  (:use :cl :game-voter :elephant :fiveam))"
msgstr ""

#: in_ed/lispweb2.html:783
msgid ""
"(in-package :test-game-voter)</pre>\n"
"<p>\n"
"\t\tAnd weâll write a test to make sure everything works as expected.\n"
"\t\tMake sure to enter the&nbsp;package. \n"
"\t\t</p>"
msgstr ""
"(in-package :test-game-voter)</pre>\n"
"<p>\n"
"\t\tИ мы напишем тест, чтобы убедиться, что все работает должным образом. \n"
"\t\tОбязательно войдите в пакет.  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:787
msgid ""
"\t\t<pre class=\"western\">TEST-GAME-VOTER&gt; (test sanity\n"
"                   (is (= 4 (+ 2 2))))"
msgstr ""

#: in_ed/lispweb2.html:800
msgid ""
"TEST-GAME-VOTER&gt; (run!)\n"
".\n"
" Did 1 check.\n"
"    Pass: 1 (100%)\n"
"    Skip: 0 ( 0%)\n"
"    Fail: 0 ( 0%)</pre>\n"
"<p>\n"
"\t\tPretty nice, eh? Extremely simple. The single period in the output\n"
"\t\tafter the <code class=\"western\">run!</code> command is the single\n"
"\t\tpassed test, similar to what youâd see in xUnit derivatives. Now\n"
"\t\tletâs see what happens when a test&nbsp;fails. \n"
"\t\t</p>"
msgstr ""
"TEST-GAME-VOTER&gt; (run!)\n"
".\n"
" Did 1 check.\n"
"    Pass: 1 (100%)\n"
"    Skip: 0 ( 0%)\n"
"    Fail: 0 ( 0%)</pre>\n"
"<p>\n"
"\t\tДовольно мило, а? Чрезвычайно просто. Единственный период в выводе "
"после \n"
"\t\tкоманды <code class=\"western\">run!</code> - это однократный пройденный "
"тест,\n"
"\t\tаналогичный тому, что вы видели в производных от xUnit. Теперь давайте \n"
"\t\tпосмотрим, что произойдет, если тест не пройден(fails). \n"
"\t\t</p>"

#: in_ed/lispweb2.html:804
msgid ""
"\t\t<pre class=\"western\">TEST-GAME-VOTER&gt; (test more-sanity\n"
"                   (is (= 4 (+ 2 4))))"
msgstr ""

#: in_ed/lispweb2.html:811
msgid ""
"TEST-GAME-VOTER&gt; (run!)\n"
".f\n"
" Did 2 checks.\n"
"    Pass: 1 (50%)\n"
"    Skip: 0 ( 0%)\n"
"    Fail: 1 (50%)"
msgstr ""

#: in_ed/lispweb2.html:823
msgid ""
" Failure Details:\n"
" --------------------------------\n"
" MORE-SANITY []: \n"
"      (+ 2 4) evaluated to 6, which is not = to 4..\n"
" --------------------------------</pre>\n"
"<p>\n"
"\t\tAgain, a huge amount of detail. Now, remove those tests from the\n"
"\t\tsuite with <code class=\"western\">(rem-test 'sanity)</code> and\n"
"\t\t<code class=\"western\">(rem-test 'more-sanity)</code>. We have real\n"
"\t\ttests to&nbsp;write. \n"
"\t\t</p>"
msgstr ""
" Failure Details:\n"
" --------------------------------\n"
" MORE-SANITY []: \n"
"      (+ 2 4) evaluated to 6, which is not = to 4..\n"
" --------------------------------</pre>\n"
"<p>\n"
"\t\tОпять же, огромное количество деталей. Теперь удалите эти тесты из \n"
"\t\tнабора/сюиты с помощью <code class=\"western\">(rem-test 'sanity)</code> "
"и \n"
"\t\t<code class=\"western\">(rem-test 'more-sanity)</code>. Нам нужно "
"написать\n"
"\t\tнастоящие тесты. \n"
"\t\t</p>"

#: in_ed/lispweb2.html:835
msgid ""
"<p>The first unit tests weâre going to tackle are on the model\n"
"\t\tlevel â making sure the game class we created in the first\n"
"\t\ttutorial works the way we expect. However, itâs a persistent\n"
"\t\tclass, and we want to make sure weâre saving test instances\n"
"\t\tsomewhere else other than our public database. So thatâs the\n"
"\t\tfirst step: defining an Elephant configuration and controller to\n"
"\t\thouse this new data. The second step is making sure we\n"
"\t\tcompartmentalize our model tests into a model&nbsp;suite. \n"
"\t\t</p>"
msgstr ""
"<p>Первые модульные тесты, которые мы собираемся провести, находятся на "
"уровне модели - \n"
"\t\tчтобы убедиться, что класс game, который мы создали в первом "
"руководстве, \n"
"\t\tработает так, как мы ожидаем. Однако это persistent/хранимый класс, и "
"мы \n"
"\t\tхотим убедиться, что сохраняем тестовые экземпляры где-то еще, кроме "
"нашей\n"
"\t\tобщедоступной базы данных. Итак, это первый шаг: определение "
"конфигурации и\n"
"\t\tконтроллера Elephant для хранения этих новых данных. Второй шаг - "
"убедиться, \n"
"\t\tчто мы разделили наши модельные тесты на сюиты/наборы моделей.  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:841
msgid ""
"\t\t<pre class=\"western\">(defparameter *test-database-config*\n"
"  '(:clsql (:sqlite3 &quot;test-store&quot;))\n"
"  &quot;The connection information and filename of the database used in the\n"
"test suite.&quot;)"
msgstr ""
"\t\t<pre class=\"western\">(defparameter *test-database-config*\n"
"  '(:clsql (:sqlite3 &quot;test-store&quot;))\n"
"  &quot;The connection information and filename of the database used in the\n"
"test suite.&quot;)"

#: in_ed/lispweb2.html:846
msgid ""
"(defparameter *test-database-controller*\n"
"  (open-store *test-database-config*)\n"
"  &quot;The database controller for the test suite. We open one here so\n"
"that every test run doesn't open more.&quot;)"
msgstr ""

#: in_ed/lispweb2.html:858
msgid ""
"(def-suite :suite-game-voter-model)\n"
"(in-suite :suite-game-voter-model)</pre>\n"
"<p>\n"
"\t\tThe next part is going to be a little tricky. We donât want every\n"
"\t\tsingle test adding its own results to the database, and then using\n"
"\t\tthat dirtied database in the next test. Elephant exposes database\n"
"\t\ttransaction management to us, but thatâs not quite good enough.\n"
"\t\tWe need to be able to specify that the transaction should be\n"
"\t\taborted. This is going to involve diving into the internals of what\n"
"\t\tmakes Elephant go: the clsql-sys and db-clsql&nbsp;packages. \n"
"\t\t</p>"
msgstr ""
"(def-suite :suite-game-voter-model)\n"
"(in-suite :suite-game-voter-model)</pre>\n"
"<p>\n"
"\t\tСледующая часть будет немного сложной. Мы не хотим, чтобы каждый тест \n"
"\t\tдобавлял свои собственные результаты в базу данных, а затем "
"использовал \n"
"\t\tэту загрязненную базу данных в следующем тесте. Elephant предоставляет \n"
"\t\tнам возможность управления транзакциями базы данных, но этого "
"недостаточно. \n"
"\t\tНам нужно указать, что транзакция должна быть aborted(прервана/"
"отменена). \n"
"\t\tЭто потребует погружения во внутреннее устройство того, что заставляет \n"
"\t\tElephant работать: пакеты clsql-sys и db-clsql. \n"
"\t\t</p>"

#: in_ed/lispweb2.html:870
msgid ""
"<p>Without getting too much into it, I will say this.\n"
"\t\t<code class=\"western\">*test-database-controller*</code> is our\n"
"\t\tinstance of the data store. Stored on it is the information used to\n"
"\t\ttrack transactions, including the status of the transaction. This\n"
"\t\tfield can be set manually, and if Elephant attempts to close a\n"
"\t\ttransaction and finds that it has failed, it rolls it back\n"
"\t\tentirely. How does it know if itâs failed? It checks to see if\n"
"\t\tthe transaction status is <code class=\"western\">:aborted</code>. \n"
"\t\t</p>"
msgstr ""
"<p>Не вдаваясь в подробности, скажу следующее. \n"
"\t\t<code class=\"western\">*test-database-controller*</code> - это наш \n"
"\t\tэкземпляр хранилища данных. В нем хранится информация, используемая для\n"
"\t\tотслеживания транзакций, включая статус транзакции. Это поле можно \n"
"\t\tустановить вручную, и если Elephant пытается закрыть транзакцию и \n"
"\t\tобнаруживает, что она не удалась, он полностью откатывает ее. \n"
"\t\tКак он узнает, что это не удалось? Он проверяет статус транзакции: \n"
"\t\t<code class=\"western\">:aborted</code>/прервана.  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:877
msgid ""
"<p>With that explanation in mind, hereâs what weâre looking at\n"
"\t\tin terms of code. This may not be the most elegant way of dealing\n"
"\t\twith it, but it works nicely for our&nbsp;purposes. \n"
"\t\t</p>"
msgstr ""
"<p>Имея в виду это объяснение, вот что мы смотрим с точки зрения кода. "
"Возможно, \n"
"\t\tэто не самый элегантный способ справиться с этим, но он отлично \n"
"\t\tподходит для наших целей.  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:901
msgid ""
"\t\t<pre class=\"western\">(def-fixture db-fixtures ()\n"
"  (with-transaction (:store-controller *test-database-controller*)\n"
"    (&amp;body)\n"
"    (setf (clsql-sys::transaction-status\n"
"           (clsql-sys::transaction\n"
"            (db-clsql::controller-db *test-database-controller*))) :"
"aborted)))</pre>\n"
"<p>\n"
"\t\t<code class=\"western\">def-fixture</code> is a FiveAM macro. It\n"
"\t\tworks almost exactly like <code class=\"western\">defmacro</code>,\n"
"\t\tinstead placing the described macro into FiveAMâs own repertoire\n"
"\t\tof fixtures. <code class=\"western\">with-transaction</code> is\n"
"\t\twithin Elephantâs namespace, and takes an associated list of\n"
"\t\toptions. In this case we want to make sure the transaction is\n"
"\t\toccuring on our test controller. The <code class=\"western\">&amp;body</"
"code>\n"
"\t\ttag is implicit with <code class=\"western\">def-fixture</code>, so\n"
"\t\twe donât need to provide it in the argument list. Finally, we\n"
"\t\t<code class=\"western\">setf</code> the status of the transaction\n"
"\t\tweâre in to <code class=\"western\">:aborted</code>. When\n"
"\t\t<code class=\"western\">with-transaction</code> hits the end of this\n"
"\t\tform, it will see the transaction âfailedâ, and roll back\n"
"\t\teverything weâve done in the&nbsp;body. \n"
"\t\t</p>"
msgstr ""
"\t\t<pre class=\"western\">(def-fixture db-fixtures ()\n"
"  (with-transaction (:store-controller *test-database-controller*)\n"
"    (&amp;body)\n"
"    (setf (clsql-sys::transaction-status\n"
"           (clsql-sys::transaction\n"
"            (db-clsql::controller-db *test-database-controller*))) :"
"aborted)))</pre>\n"
"<p>\n"
"\t\t<code class=\"western\">def-fixture</code> это макрос FiveAM. Он "
"работает \n"
"\t\tпочти так же, как <code class=\"western\">defmacro</code>, вместо "
"этого \n"
"\t\tпомещая описанный макрос в собственный набор/сюиту fixture/приборов "
"FiveAM. \n"
"\t\t<code class=\"western\">with-transaction</code> находится в пространстве "
"имен\n"
"\t\t Elephant и принимает связанный список параметров. В этом случае мы "
"хотим\n"
"\t\t убедиться, что транзакция происходит на нашем тестовом контроллере. \n"
"\t\tТег <code class=\"western\">&amp;body</code> неявно связан в \n"
"\t\t<code class=\"western\">def-fixture</code>, поэтому нам не нужно "
"указывать его \n"
"\t\tв списке аргументов. Наконец, мы <code class=\"western\">setf</code>/"
"устанавливаем\n"
"\t\tстатус транзакции, в которой мы находимся в <code class=\"western\">:"
"aborted</code>.\n"
"\t\tКогда <code class=\"western\">with-transaction</code> достигает конца "
"этой формы,\n"
"\t\tона увидит, что транзакция failed(не удалась), и откатит все, что мы "
"сделали \n"
"\t\tв body(теле). \n"
"\t\t</p>"

#: in_ed/lispweb2.html:910
msgid ""
"<p>Now letâs begin writing some tests! Off the top of my head, I\n"
"\t\tcan think of a couple things weâd like to test: adding a game,\n"
"\t\tvoting for a game, getting a game based on its name, and ensuring\n"
"\t\twe can tell if a game is stored by passing its name. Weâll start\n"
"\t\twith adding a&nbsp;game. \n"
"\t\t</p>"
msgstr ""
"<p>А теперь приступим к написанию тестов! В уме я могу придумать пару "
"вещей, \n"
"\t\tкоторые мы хотели бы протестировать: добавление игры, голосование за "
"игру,\n"
"\t\tполучение игры на основе ее имени и обеспечение того, чтобы мы могли \n"
"\t\tопределить, сохранена ли игра, передавая её имя. Начнем с добавления "
"игры.  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:916
msgid ""
"\t\t<pre class=\"western\">(test test-add-game-name\n"
"    (with-fixture db-fixtures ()\n"
"      (let ((game (game-voter::add-game &quot;test game&quot;)))\n"
"        (is (equal &quot;test game&quot; (game-voter::name game))))))"
msgstr ""

#: in_ed/lispweb2.html:929
msgid ""
"(test test-add-game-votes\n"
"    (with-fixture db-fixtures ()\n"
"      (let ((game (game-voter::add-game &quot;test game&quot;)))\n"
"        (is (= 0 (game-voter::votes game))))))</pre>\n"
"<p>\n"
"\t\tCall <code class=\"western\">run!</code> again and check out the\n"
"\t\tresults. Did you get two passing checks? Notice that <code class="
"\"western\">run!</code>\n"
"\t\treports the total number of checks, or assertions, and not the\n"
"\t\tnumber of tests. This is because FiveAM will continue through a\n"
"\t\ttest even if a check fails, and report the passing status of all\n"
"\t\tthe checks in a&nbsp;test. \n"
"\t\t</p>"
msgstr ""
"(test test-add-game-votes\n"
"    (with-fixture db-fixtures ()\n"
"      (let ((game (game-voter::add-game &quot;test game&quot;)))\n"
"        (is (= 0 (game-voter::votes game))))))</pre>\n"
"<p>\n"
"\t\tВызовите <code class=\"western\">run!</code> снова и проверьте "
"результаты. \n"
"\t\tВы получили два проходных проверки? Обратите внимание, что \n"
"\t\t<code class=\"western\">run!</code> сообщает общее количество проверок "
"или\n"
"\t\tутверждений, а не количество тестов. Это связано с тем, что FiveAM "
"продолжит\n"
"\t\tвыполнение теста, даже если проверка завершится неудачно, и сообщит о \n"
"\t\tпрохождении всех проверок в тесте. \n"
"\t\t</p>"

#: in_ed/lispweb2.html:936
msgid ""
"<p>Note that we have to use the double-colon notation for our game\n"
"\t\tfunctions, since we havenât made them externally visible from our\n"
"\t\t<code class=\"western\">game-voter</code> package. \n"
"\t\t</p>"
msgstr ""
"<p>Обратите внимание, что мы должны использовать нотацию с двойным "
"двоеточием \n"
"\t\tдля наших game функций, поскольку мы не сделали их внешне видимыми \n"
"\t\tиз нашего пакета <code class=\"western\">game-voter</code>.  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:943
msgid ""
"<p>This is looking good, but we can remove just a sliver of\n"
"\t\tduplication by writing a macro for tests we know will be using the\n"
"\t\tdatabase. To&nbsp;wit: \n"
"\t\t</p>"
msgstr ""
"<p>Выглядит неплохо, но мы можем удалить лишь часть дублирования, \n"
"\t\tнаписав макрос для тестов, которые, как мы знаем, будут использовать \n"
"\t\tбазу данных. А именно:  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:949
msgid ""
"\t\t<pre class=\"western\">(defmacro db-test (test-name &amp;body body)\n"
"  `(test ,test-name\n"
"     (with-fixture db-fixtures ()\n"
"       ,@body)))"
msgstr ""

#: in_ed/lispweb2.html:959
msgid ""
"(db-test test-add-game-name\n"
"  (let ((game (game-voter::add-game &quot;test game&quot;)))\n"
"    (is (equal &quot;test game&quot; (game-voter::name game)))))</pre>\n"
"<p>\n"
"\t\tWrite some more tests. Make sure that <code class=\"western\">game-from-"
"name</code>\n"
"\t\treturns correct values for games that are or arenât in the\n"
"\t\tsystem. Make sure adding a game with a duplicate name fails. Then,\n"
"\t\twrite something like&nbsp;this: \n"
"\t\t</p>"
msgstr ""
"(db-test test-add-game-name\n"
"  (let ((game (game-voter::add-game &quot;test game&quot;)))\n"
"    (is (equal &quot;test game&quot; (game-voter::name game)))))</pre>\n"
"<p>\n"
"\t\tНапишите еще несколько тестов. Убедитесь, что \n"
"\t\t<code class=\"western\">game-from-name</code> возвращает правильные \n"
"\t\tзначения для игр, которые есть или нет в системе. Убедитесь, что \n"
"\t\tне удалось добавить игру с повторяющимся именем. Затем напишите что-то \n"
"\t\tвроде этого:  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:971
msgid ""
"\t\t<pre class=\"western\">(db-test test-sanitized-game-name\n"
"  (game-voter::add-game &quot;Foo&quot;)\n"
"  (game-voter::add-game &quot;  Foo  &quot;)\n"
"  (is (= 1 (length (game-voter::games)))))</pre>\n"
"<p>\n"
"\t\tWell, that fails! We arenât sanitizing our input! This isnât\n"
"\t\teven caught on the client side. This is what writing good tests is\n"
"\t\tabout â finding small pieces of behavior that fail in\n"
"\t\tunexpected&nbsp;ways. \n"
"\t\t</p>"
msgstr ""
"\t\t<pre class=\"western\">(db-test test-sanitized-game-name\n"
"  (game-voter::add-game &quot;Foo&quot;)\n"
"  (game-voter::add-game &quot;  Foo  &quot;)\n"
"  (is (= 1 (length (game-voter::games)))))</pre>\n"
"<p>\n"
"\t\tЧто ж, это не удается! Мы не дезинфицируем наш ввод! Это даже не \n"
"\t\tулавливается на стороне клиента. В этом и заключается суть написания \n"
"\t\tхороших тестов - поиск небольших кусочков поведения, которые \n"
"\t\tнеожиданно дают сбой.\n"
"\t\t</p>"

#: in_ed/lispweb2.html:982
msgid ""
"<p>We can ensure that the server takes care of extra padding around\n"
"\t\tthe game name by trimming it. <code class=\"western\">string-trim</"
"code>\n"
"\t\ttakes a string called a <b>char bag</b>, and then the string you\n"
"\t\twish to trim. Since all strings are array of characters,\n"
"\t\t<code class=\"western\">string-trim</code> walks through the char bag\n"
"\t\tand removes instances of each character from both sides of\n"
"\t\tyour&nbsp;argument. \n"
"\t\t</p>"
msgstr ""
"<p>Мы можем гарантировать, что сервер позаботится о дополнительных "
"отступах \n"
"\t\tвокруг имени игры, обрезав его. <code class=\"western\">string-trim</"
"code> \n"
"\t\tберет строку, называемую <b>char bag</b>, а затем строку, которую \n"
"\t\tвы хотите обрезать. Поскольку все строки представляют собой массив "
"символов,\n"
"\t\tфункция <code class=\"western\">string-trim</code>(обрезки строк) "
"проходит по\n"
"\t\tchar bag(сумке символов) и удаляет экземпляры каждого символа с обеих "
"сторон \n"
"\t\tвашего аргумента. \n"
"\t\t</p>"

#: in_ed/lispweb2.html:988
msgid ""
"<p>We can modify the <code class=\"western\">add-game</code> function\n"
"\t\tas&nbsp;below: \n"
"\t\t</p>"
msgstr ""
"<p>Мы можем изменить функцию <code class=\"western\">add-game</code>,\n"
"\t\t как показано ниже:  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:999
msgid ""
"\t\t<pre class=\"western\">(defun add-game (name)\n"
"  (let ((sanitized-name (string-trim &quot; &quot; name)))\n"
"    (with-transaction ()\n"
"      (unless (game-stored? sanitized-name)\n"
"        (make-instance 'persistent-game :name sanitized-name)))))</pre>\n"
"<p>\n"
"\t\tOnce the new function is evaluated, running the test suite again\n"
"\t\tshould&nbsp;pass. \n"
"\t\t</p>"
msgstr ""
"\t\t<pre class=\"western\">(defun add-game (name)\n"
"  (let ((sanitized-name (string-trim &quot; &quot; name)))\n"
"    (with-transaction ()\n"
"      (unless (game-stored? sanitized-name)\n"
"        (make-instance 'persistent-game :name sanitized-name)))))</pre>\n"
"<p>\n"
"\t\tПосле вычисления новой функции повторный запуск набора тестов \n"
"\t\tдолжен пройти. \n"
"\t\t</p>"

#: in_ed/lispweb2.html:1006
msgid ""
"\t</div>\n"
"</div>\n"
"<div id=\"outline-container-sec-8\" dir=\"ltr\">\n"
"\t<h3 class=\"western\"><a name=\"sec-8\"></a>Conclusion</h3>\n"
"\t<div id=\"text-8\" dir=\"ltr\">"
msgstr ""
"\t</div>\n"
"</div>\n"
"<div id=\"outline-container-sec-8\" dir=\"ltr\">\n"
"\t<h3 class=\"western\"><a name=\"sec-8\"></a>Заключение</h3>\n"
"\t<div id=\"text-8\" dir=\"ltr\">"

#: in_ed/lispweb2.html:1015
msgid ""
"<p>Thereâs a lot of places to go from here. The CSS we wrote gets\n"
"\t\tgenerated on every load. A caching mechanism would be nice. Thereâs\n"
"\t\tno way to delete entries, or to make sure unscrupulous people\n"
"\t\tarenât voting more than once. It would be cool if we added some\n"
"\t\tinformation to the games, such as publisher, year, and so on â\n"
"\t\tmaybe even box art and screenshots, which would mean dealing with\n"
"\t\tfile uploads. We donât have tests for our controller&nbsp;functions.\n"
"\t\t\t\t</p>"
msgstr ""
"<p>Отсюда есть куда пойти. Написанный нами CSS генерируется при каждой "
"загрузке. \n"
"\t\tБыло бы неплохо иметь механизм кеширования. Невозможно удалить записи "
"или\n"
"\t\tубедиться, что недобросовестные люди голосуют не более одного раза. \n"
"\t\tБыло бы здорово, если бы мы добавили в игры некоторую информацию, \n"
"\t\tтакую как издатель, год и т. Д. - возможно, даже бокс-арты и "
"скриншоты, \n"
"\t\tчто означало бы иметь дело с загрузкой файлов. У нас нет тестов для "
"наших \n"
"\t\tфункций контроллера.\n"
"\t\t\t\t</p>"

#: in_ed/lispweb2.html:1025
msgid ""
"<p>However, weâve brought our little game voter a little closer\n"
"\t\tto a solid, robust modern web application. I hope Iâve managed to\n"
"\t\tshow off how easy it is to extend and refactor a small Lisp\n"
"\t\tproject, and have piqued your interest into giving it a try for web\n"
"\t\tdevelopment. Youâll be amazed how easy it is to start thinking\n"
"\t\tin&nbsp;Lisp. \n"
"\t\t</p>"
msgstr ""
"<p>Однако мы приблизили нашего маленького игрового избирателя к надежному "
"современному \n"
"\t\tвеб-приложению. Я надеюсь, что мне удалось продемонстрировать, "
"насколько \n"
"\t\tлегко расширить и реорганизовать небольшой проект Lisp, и пробудил ваш \n"
"\t\tинтерес к тому, чтобы попробовать его для веб-разработки. Вы будете "
"удивлены,\n"
"\t\tнасколько легко начать думать на Лиспе.  \n"
"\t\t</p>"

#: in_ed/lispweb2.html:1029
msgid ""
"\t</div>\n"
"</div>"
msgstr ""

#: in_ed/lispweb2.html:1031
msgid ""
"<p><img src=\"lispweb2_html_d7e2174c31b48543.png\" name=\"Image2\" align="
"\"bottom\" width=\"250\" height=\"250\" border=\"0\"/>"
msgstr ""

#: in_ed/lispweb2.html:1033
msgctxt "in_ed/lispweb2.html:1033"
msgid "</p>"
msgstr ""

#: in_ed/lispweb2.html:1043
msgid ""
"<p>Copyright MMXVI <a href=\"https://web.archive.org/web/20171109223946/"
"mailto:msnyder@msnyder.info\">Matthew\n"
"Snyder</a>. All rights reserved. My opinions are not necessarily my\n"
"employer's. If you enjoyed this article, you may also like <a href=\"https://"
"web.archive.org/web/20171109223946/http://msnyder.info/posts/2011/12/common-"
"lisp-mustache/\">From\n"
"Spec to Test Suite in Common Lisp:&nbsp;Mustache</a>, and <a href=\"https://"
"web.archive.org/web/20171109223946/http://msnyder.info/posts/2012/05/icloud-"
"reminders-orgmode/\">iCloud\n"
"Reminders in Org-mode: Talking to OS X with&nbsp;Emacs</a>. You may\n"
"also be interested in browsing the <a href=\"https://web.archive.org/"
"web/20171109223946/http://msnyder.info/archives/\">archives</a>.\n"
"</p>"
msgstr ""

#: in_ed/lispweb2.html:1046
msgid "<p style=\"margin-bottom: 0cm; line-height: 100%\"><br/>"
msgstr ""

#: in_ed/lispweb2.html:1048
msgctxt "in_ed/lispweb2.html:1048"
msgid "</p>"
msgstr ""

#: in_ed/lispweb2.html:1051
msgid ""
"</body>\n"
"</html>"
msgstr ""
