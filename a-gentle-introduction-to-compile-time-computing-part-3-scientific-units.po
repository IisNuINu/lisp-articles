#
# NuINu <don't@send.my>, 2021.
#
#. extracted from in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-11 10:44+0300\n"
"PO-Revision-Date: 2021-08-12 10:25+0300\n"
"Last-Translator: NuINu <don't@send.my>\n"
"Language-Team: Russian <don't@send.my>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Gtranslator 2.91.7\n"
"Plural-Forms: nplurals=5; plural=n==1 ? 0 : n==2 ? 1 : n<7 ? 2 : n<11 ? 3 : "
"4;\n"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:24
msgid ""
"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n"
"<html>\n"
"<head>\n"
"\t<meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\"/>\n"
"\t<title></title>\n"
"\t<meta name=\"generator\" content=\"LibreOffice 6.0.7.3 (Linux)\"/>\n"
"\t<meta name=\"created\" content=\"2021-08-11T10:14:08.265386374\"/>\n"
"\t<meta name=\"changed\" content=\"2021-08-11T10:17:33.244050920\"/>\n"
"\t<style type=\"text/css\">\n"
"\t\t@page { margin: 2cm }\n"
"\t\tp { margin-bottom: 0.25cm; line-height: 115% }\n"
"\t\th1 { margin-bottom: 0.21cm }\n"
"\t\th1.western { font-family: \"Liberation Serif\", serif }\n"
"\t\th1.cjk { font-family: \"Noto Sans CJK SC\"; font-size: 24pt }\n"
"\t\th1.ctl { font-family: \"Lohit Devanagari\"; font-size: 24pt }\n"
"\t\tpre.cjk { font-family: \"Courier New\", monospace }\n"
"\t\ta:link { so-language: zxx }\n"
"\t</style>\n"
"</head>\n"
"<body lang=\"en-US\" dir=\"ltr\">\n"
"<h1 class=\"western\"><a name=\"b719\"></a>Safely dealing with scientific\n"
"units of variables at compile time (a <a href=\"https://medium.com/"
"@MartinCracauer/a-gentle-introduction-to-compile-time-computing-part-1-"
"d4d96099cea0\">gentle\n"
"introduction to Compile-Time Computing â part </a>3)</h1>"
msgstr ""
"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n"
"<html>\n"
"<head>\n"
"\t<meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\"/>\n"
"\t<title></title>\n"
"\t<meta name=\"generator\" content=\"LibreOffice 6.0.7.3 (Linux)\"/>\n"
"\t<meta name=\"created\" content=\"2021-08-11T10:14:08.265386374\"/>\n"
"\t<meta name=\"changed\" content=\"2021-08-11T10:17:33.244050920\"/>\n"
"\t<style type=\"text/css\">\n"
"\t\t@page { margin: 2cm }\n"
"\t\tp { margin-bottom: 0.25cm; line-height: 115% }\n"
"\t\th1 { margin-bottom: 0.21cm }\n"
"\t\th1.western { font-family: \"Liberation Serif\", serif }\n"
"\t\th1.cjk { font-family: \"Noto Sans CJK SC\"; font-size: 24pt }\n"
"\t\th1.ctl { font-family: \"Lohit Devanagari\"; font-size: 24pt }\n"
"\t\tpre.cjk { font-family: \"Courier New\", monospace }\n"
"\t\ta:link { so-language: zxx }\n"
"\t</style>\n"
"</head>\n"
"<body lang=\"en-US\" dir=\"ltr\">\n"
"<h1 class=\"western\"><a name=\"b719\"></a>\n"
"Безопасная работа с научными единицами переменных во время компиляции \n"
"(Нежное введение в вычисления во время компиляции - часть 3) </h1>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:31
msgid ""
"<p><a href=\"https://medium.com/@MartinCracauer?"
"source=post_page-----8e41d8a727ca--------------------------------\">\n"
"  <font color=\"#000080\">\n"
"    <img src=\"a-gentle-introduction-to-compile-time-computing-part-3-"
"scientific-units_html_39aaac8f8c35ff7a.jpg\" name=\"Image1\" alt=\"Martin "
"Cracauer\" align=\"bottom\" width=\"28\" height=\"28\" border=\"1\"/>\n"
"  </font>\n"
"</a>\n"
"</p>"
msgstr ""

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:36
msgid ""
"<p><a href=\"https://medium.com/@MartinCracauer?"
"source=post_page-----8e41d8a727ca--------------------------------\">Martin\n"
"Cracauer</a></p>"
msgstr ""

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:41
msgid ""
"<p><a href=\"https://medium.com/@MartinCracauer/a-gentle-introduction-to-"
"compile-time-computing-part-3-scientific-units-8e41d8a727ca?"
"source=post_page-----8e41d8a727ca--------------------------------\">Mar\n"
"15, 2019Â·15 min read</a></p>"
msgstr ""

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:46
msgid ""
"<p><img src=\"a-gentle-introduction-to-compile-time-computing-part-3-"
"scientific-units_html_c19f2ced434922.png\" name=\"Image2\" align=\"bottom\" "
"width=\"500\" height=\"700\" border=\"0\"/>\n"
"</p>"
msgstr ""

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:51
msgid ""
"<p><a name=\"b980\"></a>There is constant debate whether to include\n"
"units in variable and field names such as in âlength-in-metersâ.</p>"
msgstr ""
"<p><a name=\"b980\"></a>Постоянно ведутся споры о том, следует ли включать "
"единицы измерения \n"
"в имена переменных и полей, такие как «длина в метрах»(length-in-meters).\n"
".</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:58
msgid ""
"<p><a name=\"bf64\"></a>We can do better, much better. What we want is\n"
"a method where numbers coming in from source code (literals) and from\n"
"files or streams are all having their unit declared, and the system\n"
"converts them if and only if it is necessary to do so.</p>"
msgstr ""
"<p><a name=\"bf64\"></a>Мы можем сделать лучше, намного лучше. Нам нужен "
"метод, \n"
"в котором для чисел, поступающих из исходного кода (литералов) и из файлов "
"или потоков, \n"
"объявляется их единица измерения, и система преобразует их тогда и только "
"тогда, \n"
"когда это необходимо.\n"
"</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:63
msgid ""
"<p><a name=\"ccac\"></a>So what we are *not* doing is dragging the unit\n"
"around at runtime like this:</p>"
msgstr ""
"<p><a name=\"ccac\"></a>Итак, чего мы *не* делаем, так это тащить за собой "
"единицу измерения(unit) \n"
"во время выполнения как в вот такой структуре: </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:72
msgid ""
"<pre class=\"western\"><a name=\"78da\"></a>struct double-ish {\n"
"   double number;\n"
"   enum unit;\n"
"}</pre>\n"
"<p>\n"
"<a name=\"dcea\"></a>â¦ and then check and if necessary convert the\n"
"unit on every operation at runtime.</p>"
msgstr ""
"<pre class=\"western\"><a name=\"78da\"></a>struct double-ish {\n"
"   double number;\n"
"   enum unit;\n"
"}</pre>\n"
"<p>\n"
"<a name=\"dcea\"></a>>â¦ а затем проверять и, при необходимости, "
"конвертировать единицу измерения\n"
"(unit) при каждой операции во время выполнения. </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:78
msgid ""
"<p><a name=\"1813\"></a><a name=\"rmm\"></a>And we want *incremental*\n"
"development. We want something useful *today*, without being forced\n"
"to implement ninja subsystem before we can write our production code.</p>"
msgstr ""
"<p><a name=\"1813\"></a><a name=\"rmm\"></a>И мы хотим *постепенного* "
"развития. \n"
"Мы хотим что-то полезное *сегодня*, без необходимости реализовывать "
"подсистему ниндзя, \n"
"прежде чем мы сможем написать наш производственный код.</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:83
msgid ""
"<p><a name=\"0b1c\"></a>For background you might want to consult the\n"
"first two parts of my series on compile-time computing:</p>"
msgstr ""
"<p><a name=\"0b1c\"></a>В качестве справочной информации вы можете "
"обратиться \n"
"к первым двум частям моей серии о вычислениях во время компиляции: </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:88
msgid ""
"<ul>\n"
"\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a name=\"bb01\"></a><a href=\"https://"
"medium.com/@MartinCracauer/a-gentle-introduction-to-compile-time-computing-"
"part-1-d4d96099cea0\">https://medium.com/@MartinCracauer/a-gentle-"
"introduction-to-compile-time-computing-part-1-d4d96099cea0</a></p>"
msgstr ""

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:91
msgctxt ""
"in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-"
"units.html:91"
msgid "\t<li/>"
msgstr ""

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:93
msgid ""
"<p><a name=\"3148\"></a><a href=\"https://medium.com/@MartinCracauer/a-"
"gentle-introduction-to-compile-time-computing-part-2-cb0a46f6cfe8\">https://"
"medium.com/@MartinCracauer/a-gentle-introduction-to-compile-time-computing-"
"part-2-cb0a46f6cfe8</a></p>"
msgstr ""

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:96
msgctxt ""
"in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-"
"units.html:96"
msgid "</ul>"
msgstr ""

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:99
msgid ""
"<p><a name=\"e4a2\"></a><strong>First order of business for scientific\n"
"units:</strong></p>"
msgstr ""
"<p><a name=\"e4a2\"></a><strong>Первый порядок работы для научных единиц "
"измерения(units):</strong></p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:103
msgid ""
"<ul>\n"
"\t<li/>"
msgstr ""

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:111
msgid ""
"<p><a name=\"0281\"></a>write enough code so that when you enter\n"
"\tliterals into source code you can write down the unit *today*,\n"
"\talthough you donât have time to do something smart about the unit\n"
"\ttoday. But every time you write something in the source code you\n"
"\twant to put the unit *today*. So that later you can do something\n"
"\tsmart about the unit *mechanism* without having to edit *all* of\n"
"\tyour previously entered numbers.</p>"
msgstr ""
"<p><a name=\"0281\"></a> напишите достаточно кода, чтобы, вводя литералы в "
"исходный код, \n"
"вы могли записать единицу измерения(unit) уже *сегодня*, хотя у вас нет "
"времени делать \n"
"что-то умное сегодня с этой единицей измерения. Но каждый раз, когда вы "
"пишете что-то \n"
"в исходном коде, вы хотите *сегодня* поставить единицу измерения. Так что "
"позже вы можете \n"
"сделать что-нибудь умное с  *механизмом* обработки единиц измерения без "
"необходимости \n"
"редактировать *все* ранее введенные вами числа. </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:114
msgctxt ""
"in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-"
"units.html:114"
msgid "</ul>"
msgstr ""

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:116
msgid "<p><a name=\"2e84\"></a>Looks like this-ish:</p>"
msgstr "<p><a name=\"2e84\"></a>Выглядит вот так: </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:128
msgid ""
"<pre class=\"western\"><a name=\"b0d2\"></a>(defconstant +c+ (unit 299792458 "
"m/s))\n"
"(defconstant +h+ (unit 6.62607015e-34 Js))\n"
"<a name=\"8389\"></a>(defconstant +e+ (unit 2.7182882845 :none))(defconstant "
"+up-quark-mass+ (unit 2.3 MeV/c^2 +0.7 -0.5))\n"
"[...]</pre>\n"
"<p>\n"
"<a name=\"bea3\"></a>That looks like a good way to write things down\n"
"*today*. As I look up all this stuff in Wikipedia I also write down\n"
"additional metadata, in this case the variance. Again, it is not that\n"
"I can do something about the variance today. But the data is right\n"
"there and I want to enter it *today*.</p>"
msgstr ""
"<pre class=\"western\"><a name=\"b0d2\"></a>(defconstant +c+ (unit 299792458 "
"m/s))\n"
"(defconstant +h+ (unit 6.62607015e-34 Js))\n"
"<a name=\"8389\"></a>(defconstant +e+ (unit 2.7182882845 :none))(defconstant "
"+up-quark-mass+ (unit 2.3 MeV/c^2 +0.7 -0.5))\n"
"[...]</pre>\n"
"<p>\n"
"<a name=\"bea3\"></a>\n"
"Похоже, это хороший способ записывать *сегодня*. Когда я ищу все это в "
"Википедии, \n"
"я также записываю дополнительные метаданные, в данном случае "
"variance(дисперсию). \n"
"Опять же, дело не в том, что сегодня я могу что-то сделать с дисперсией. \n"
"Но данные прямо там, и я хочу ввести их *сегодня*.</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:133
msgid ""
"<p><a name=\"0fc9\"></a>So, to get things rolling today, we do the\n"
"simplest implementation that allows us to do the above:</p>"
msgstr ""
"<p><a name=\"0fc9\"></a>Итак, чтобы начать работу сегодня, мы делаем "
"простейшую реализацию, \n"
"которая позволяет нам делать то, что описано выше: </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:140
msgid ""
"<pre class=\"western\"><a name=\"2a12\"></a>(defmacro unit (value unit &amp;"
"rest more)\n"
"  (declare (ignore unit more))\n"
"  value)</pre>\n"
"<p>\n"
"<a name=\"d75b\"></a>That does the following:</p>"
msgstr ""
"<pre class=\"western\"><a name=\"2a12\"></a>(defmacro unit (value unit &amp;"
"rest more)\n"
"  (declare (ignore unit more))\n"
"  value)</pre>\n"
"<p>\n"
"<a name=\"d75b\"></a>Этот макрос делает следующее::</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:146
msgid ""
"<ul>\n"
"\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a name=\"9060\"></a>requires that\n"
"\ta unit is given</p>"
msgstr ""
"<ul>\n"
"\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a name=\"9060\"></a>требует, чтобы "
"unit(единица\n"
"\tизмерения) была дана\n"
"</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:149
msgctxt ""
"in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-"
"units.html:149"
msgid "\t<li/>"
msgstr ""

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:153
msgid ""
"<p><a name=\"96f0\"></a>prepares for additional metadata to come\n"
"\tin, which we will do something about in a future version of the\n"
"\tmacro. Right now we just accept more arguments and throw them away</p>"
msgstr ""
"<p><a name=\"96f0\"></a>готовится к поступлению дополнительных метаданных, \n"
"\tс которыми мы кое-что сделаем в будущей версии макроса. Прямо сейчас \n"
"\tмы просто принимаем больше аргументов и отбрасываем их </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:156
msgctxt ""
"in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-"
"units.html:156"
msgid "</ul>"
msgstr ""

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:159
msgid ""
"<p><a name=\"d001\"></a>That macro makes the defconstants above work.\n"
"We can start entering all numbers with units today.</p>"
msgstr ""
"<p><a name=\"d001\"></a>Этот макрос заставляет работать указанные выше "
"defconstants. \n"
"Мы можем начать вводить все числа с единиц измерения(units) уже сегодня..</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:164
msgid ""
"<p><a name=\"045e\"></a>Before I go any further, let me point you to\n"
"the runnable code file: <a href=\"https://www.cons.org/cracauer/ccunits.lisp"
"\">https://www.cons.org/cracauer/ccunits.lisp</a></p>"
msgstr ""
"<p><a name=\"045e\"></a>Прежде чем продолжить, позвольте мне указать вам на "
"файл \n"
"исполняемого кода: \n"
" <a href=\"https://www.cons.org/cracauer/ccunits.lisp\">https://www.cons.org/"
"cracauer/ccunits.lisp</a></p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:170
msgid ""
"<p><a name=\"0cf0\"></a>It is hard to keep things up-to-date in the\n"
"medium doc via copy-n-paste. Please refer to that lisp file for\n"
"actually running examples.</p>"
msgstr ""
"<p><a name=\"0cf0\"></a>Трудно поддерживать актуальность в среднем "
"документе \n"
"с помощью копирования и вставки. Пожалуйста, обратитесь к этому Lisp-"
"файлу, \n"
"чтобы увидеть, как работают примеры.</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:175
msgid ""
"<p><a name=\"2cb6\"></a><strong>Next step in simplicity is to just\n"
"force everything to be SI units:</strong></p>"
msgstr ""
"<p><a name=\"2cb6\"></a><strong>Следующий шаг в простоте - \n"
"просто заставить все быть единицами измерения СИ: </strong></p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:193
msgid ""
"<pre class=\"western\"><a name=\"9cbb\"></a>(defmacro unit (value unit &amp;"
"rest more)\n"
"  (declare (ignore more))\n"
"  (case unit\n"
"    (m/s)\n"
"    (Js)\n"
"    (:none)\n"
"    (t (error &quot;unknown unit ~a&quot; unit)))\n"
"  value)</pre>\n"
"<p>\n"
"<a name=\"fac2\"></a>Make sure you understand this runs at compile\n"
"time. You can use it to define those *constants*, and they will be\n"
"literal constants as far as the compiler is concerned. We do the\n"
"above processing at compile-time, which means it happens before the\n"
"compiler compiles assembly code for any functions using these\n"
"constants. Nothing at runtime. At runtime you just have the number.\n"
"You just reject units you donât know.</p>"
msgstr ""
"<pre class=\"western\"><a name=\"9cbb\"></a>(defmacro unit (value unit &amp;"
"rest more)\n"
"  (declare (ignore more))\n"
"  (case unit\n"
"    (m/s)\n"
"    (Js)\n"
"    (:none)\n"
"    (t (error &quot;unknown unit ~a&quot; unit)))\n"
"  value)</pre>\n"
"<p>\n"
"<a name=\"fac2\"></a>\n"
"Убедитесь, что вы понимаете, что это выполняется во время компиляции. Вы "
"можете \n"
"использовать его для определения этих *констант*, и они будут литеральными "
"константами \n"
"для компилятора. Мы выполняем описанную выше обработку во время компиляции, "
"что означает, \n"
"что это происходит до того, как компилятор скомпилирует ассемблерный код для "
"любых функций,\n"
"использующих эти константы. Ничего во время выполнения. Во время выполнения "
"у вас просто номер. \n"
"Вы просто отклоняете единицы, которых не знаете. </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:199
msgid ""
"<p><a name=\"bb38\"></a>Writing that code took me less than 20 seconds.\n"
"Given Lispâs turnaround time I can test this code by compiling both\n"
"the macro and the constant declarations in less than 1 second.</p>"
msgstr ""
"<p><a name=\"bb38\"></a>\n"
"Написание этого кода заняло у меня менее 20 секунд. Учитывая время "
"выполнения \n"
"Lisp, я могу протестировать этот код, скомпилировав как макрос, так и "
"объявления \n"
"констант менее чем за 1 секунду.</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:203
msgid "<p><a name=\"1bc5\"></a>OK, so that eats up these constants:</p>"
msgstr "<p><a name=\"1bc5\"></a>Хорошо, так что эти константы съедаются: </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:211
msgid ""
"<pre class=\"western\"><a name=\"f91c\"></a>(defconstant +c+ (unit 299792458 "
"m/s))\n"
"(defconstant +h+ (unit 6.62607015e-34 Js))\n"
"(defconstant +e+ (unit 2.7182882845 :none))</pre>\n"
"<p>\n"
"<a name=\"7a62\"></a>But it doesnât like this one, which isnât\n"
"exactly SI:</p>"
msgstr ""
"<pre class=\"western\"><a name=\"f91c\"></a>(defconstant +c+ (unit 299792458 "
"m/s))\n"
"(defconstant +h+ (unit 6.62607015e-34 Js))\n"
"(defconstant +e+ (unit 2.7182882845 :none))</pre>\n"
"<p>\n"
"<a name=\"7a62\"></a>Но ему не нравится это, которое не совсем СИ. :</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:217
msgid ""
"<pre class=\"western\" style=\"margin-bottom: 0.5cm\"><a name=\"b89e\"></"
"a>(defconstant +up-quark-mass+ (unit 2.3 MeV/c^2 +0.7 -0.5))</pre>\n"
"<p>\n"
"<a name=\"66a4\"></a>The error message is very clear, and it appears at\n"
"*compile* time:</p>"
msgstr ""
"<pre class=\"western\" style=\"margin-bottom: 0.5cm\"><a name=\"b89e\"></"
"a>(defconstant +up-quark-mass+ (unit 2.3 MeV/c^2 +0.7 -0.5))</pre>\n"
"<p>\n"
"<a name=\"66a4\"></a>Сообщение об ошибке очень четкое и появляется во время "
"*компиляции*: </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:227
msgid ""
"<pre class=\"western\"><a name=\"8618\"></a>unknown unit MEV/C^2\n"
"   [Condition of type SIMPLE-ERROR]</pre>\n"
"<p>\n"
"<a name=\"bbc2\"></a>So what do we do? Do we just add MeV/cÂ² into the\n"
"macro? No, we had decided (for now) that our system works internally\n"
"with SI units, so it is time to also teach this thing how to convert.\n"
"We also change the way that the value is returned to be a bit more\n"
"functional:</p>"
msgstr ""
"<pre class=\"western\"><a name=\"8618\"></a>unknown unit MEV/C^2\n"
"   [Condition of type SIMPLE-ERROR]</pre>\n"
"<p>\n"
"<a name=\"bbc2\"></a>Так что же нам делать? Мы просто добавляем в макрос MEV/"
"C^2? \n"
"Нет, мы решили (на данный момент), что наша система внутренне работает с "
"единицами СИ, \n"
"так что пора также научить эту штуку конвертировать. Мы также изменили "
"способ возврата \n"
"значения, чтобы он был немного более функциональным: </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:240
msgid ""
"<pre class=\"western\"><a name=\"532f\"></a>(defmacro unit (value unit &amp;"
"rest more)\n"
"  (declare (ignore more))\n"
"  (case unit\n"
"    (m/s value)\n"
"    (Js value)\n"
"    (:none value)\n"
"    (MeV/c^2 (* value 1.78266191e-30))\n"
"    (t (error &quot;unknown unit ~a&quot; unit))))</pre>\n"
"<p>\n"
"<a name=\"d013\"></a>That makes it process the quark mass constant. The\n"
"result looks correct:</p>"
msgstr ""
"<pre class=\"western\"><a name=\"532f\"></a>(defmacro unit (value unit &amp;"
"rest more)\n"
"  (declare (ignore more))\n"
"  (case unit\n"
"    (m/s value)\n"
"    (Js value)\n"
"    (:none value)\n"
"    (MeV/c^2 (* value 1.78266191e-30))\n"
"    (t (error &quot;unknown unit ~a&quot; unit))))</pre>\n"
"<p>\n"
"<a name=\"d013\"></a>Это заставляет его обрабатывать константу массы "
"кварка. \n"
"Результат выглядит правильным: </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:247
msgid ""
"<pre class=\"western\"><a name=\"ac1b\"></a>Yes, Master? CL-USER&gt; +up-"
"quark-mass+\n"
"4.100122e-30</pre>\n"
"<p>\n"
"<a name=\"5655\"></a>Again, this is at compile time. Letâs check\n"
"that. Make sure that the compiled code has no trace of unit checking:</p>"
msgstr ""
"<pre class=\"western\"><a name=\"ac1b\"></a>Yes, Master? CL-USER&gt; +up-"
"quark-mass+\n"
"4.100122e-30</pre>\n"
"<p>\n"
"<a name=\"5655\"></a>Опять же, это происходит во время компиляции. Давай "
"проверим. \n"
"Убедимся, что в скомпилированном коде нет следов проверки единиц измерения: "
"</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:252
msgid ""
"<pre class=\"western\"><a name=\"13ac\"></a>(defun testfun ()\n"
"  (+ +up-quark-mass+ +c+))\n"
"<a name=\"84ac\"></a>;; compile in SBCL, then disassemble:Yes, Master? CL-"
"USER&gt; (disassemble 'testfun)"
msgstr ""
"<pre class=\"western\"><a name=\"13ac\"></a>(defun testfun ()\n"
"  (+ +up-quark-mass+ +c+))\n"
"<a name=\"84ac\"></a>;; скомпилируем в SBCL, затем дизассеблируем:Yes, "
"Master? CL-USER&gt; (disassemble 'testfun)"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:271
msgid ""
"; disassembly for "
"TESTFUN                                                                                                                                                                                         \n"
"; Size: 13 bytes. Origin: "
"#x52E3B9B6                                                                                                                                                                              \n"
"; B6: 488B15B3FFFFFF   MOV RDX, [RIP-77] ; no-arg-parsing entry "
"point                                                                                                                        \n"
"                                               ; "
"2.9979245e8                                                                                                                                       \n"
"; BD: 488BE5           MOV RSP, "
"RBP                                                                                                                                                                         \n"
"; C0: F8               "
"CLC                                                                                                                                                                                  \n"
"; C1: 5D               POP "
"RBP                                                                                                                                                                              \n"
"; C2: C3               "
"RET                                                                                                                                                                                  \n"
"NIL                                                                                                                                                                                                               \n"
"Yes, Master? CL-USER&gt;</pre>\n"
"<p>\n"
"<a name=\"7480\"></a>Oh lookie. Not only did it only leave the numbers\n"
"at run time, the compiler even recognized that there is arithmetic on\n"
"constants and folded it at compile time. This is called constant\n"
"folding. Constant folding is generally available in C++ and friends,\n"
"too. The problem is that you need a good way to come up with all the\n"
"constants in the first place, without entering the same data\n"
"repeatedly, and while entering them with unit checking.</p>"
msgstr ""
"; disassembly for "
"TESTFUN                                                                                                                                                                                         \n"
"; Size: 13 bytes. Origin: "
"#x52E3B9B6                                                                                                                                                                              \n"
"; B6: 488B15B3FFFFFF   MOV RDX, [RIP-77] ; no-arg-parsing entry "
"point                                                                                                                        \n"
"                                               ; "
"2.9979245e8                                                                                                                                       \n"
"; BD: 488BE5           MOV RSP, "
"RBP                                                                                                                                                                         \n"
"; C0: F8               "
"CLC                                                                                                                                                                                  \n"
"; C1: 5D               POP "
"RBP                                                                                                                                                                              \n"
"; C2: C3               "
"RET                                                                                                                                                                                  \n"
"NIL                                                                                                                                                                                                               \n"
"Yes, Master? CL-USER&gt;</pre>\n"
"<p>\n"
"<a name=\"7480\"></a>О, смотри. Он не только оставил числа во время "
"выполнения, \n"
"но и компилятор даже распознал, что над константами есть арифметические "
"операции, \n"
"и свернул их(выполнил и подставил результат) во время компиляции. Это "
"называется сворачиванием\n"
"констант. Сворачивание констант обычно доступно в C ++ и его друзьях. "
"Проблема в том, \n"
"что вам нужен хороший способ, в первую очередь, придумать все константы, не "
"вводя одни и\n"
" те же данные повторно, а вводя их с проверкой единиц измерения(unit "
"checking). </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:282
msgid ""
"<p><a name=\"e0fb\"></a>How long did it take me to write that code?\n"
"Well the biggest step was entering the units into Google to find out\n"
"what the conversion constant is. Luckily the Google search engine is\n"
"sophisticated enough that it knows about units as exotic as MeV/cÂ².\n"
"So a total of less than a minute. Testing my new code required\n"
"compiling it and running it. Thanks to the usual Lisp turnaround that\n"
"took less than a second. For more see here:\n"
"<a href=\"https://hackernoon.com/software-development-at-1-hz-5530bb58fc0e"
"\">https://hackernoon.com/software-development-at-1-hz-5530bb58fc0e</a></p>"
msgstr ""
"<p><a name=\"e0fb\"></a>Как долго я писал этот код? Ну, самым большим "
"шагом \n"
"было ввести единицы измерения в Google, чтобы узнать, что такое константа \n"
"преобразования. К счастью, поисковая система Google достаточно сложна, \n"
"чтобы знать о таких экзотических единицах, как MeV/cÂ². Итого меньше "
"минуты. \n"
"Для тестирования моего нового кода потребовалось его скомпилировать и "
"запустить. \n"
"Благодаря обычному процессу обработки Lisp, который занял менее секунды. "
"Подробнее см. \n"
"Здесь: \n"
"<a href=\"https://hackernoon.com/software-development-at-1-hz-5530bb58fc0e"
"\">https://hackernoon.com/software-development-at-1-hz-5530bb58fc0e</a></p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:289
msgid ""
"<p><a name=\"da3a\"></a>OK, so that is useful-ish. You can just add new\n"
"units that you need into the macro when new ones come up as you enter\n"
"values. Overhead is limited. You never have to sit down for an\n"
"evening and expand that macro for extended periods of time.</p>"
msgstr ""
"<p><a name=\"da3a\"></a>Хорошо, так что это полезно. Вы можете просто "
"добавить \n"
"новые единицы, которые вам нужны, в макрос, когда новые появляются при "
"вводе \n"
"значений. Накладные расходы ограничены. Вам никогда не придется сидеть "
"вечером \n"
"и расширять этот макрос на длительные периоды времени.\n"
"</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:293
msgid "<p><a name=\"ee7e\"></a>There are two improvements to do here:</p>"
msgstr "<p><a name=\"ee7e\"></a>Здесь нужно сделать два улучшения: </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:305
msgid ""
"<ul>\n"
"\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a name=\"5e05\"></a>instead of\n"
"\tputting every combined unit (such as m/s) into the macro you can, at\n"
"\tcompile time, walk the unit declaration as a string and resolve it\n"
"\tinto the fundamental, non-combined units (such as parsing it out\n"
"\tinto meters, the / operator and seconds). Thatâs like actual work\n"
"\twriting an evaluator. It would add safety since it reduces the\n"
"\tnumbers of conversion constants you have to enter into the macro. I\n"
"\twant to do something else first though.</p>"
msgstr ""
"<ul>\n"
"\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a name=\"5e05\"></a>вместо того, чтобы "
"помещать \n"
"\tкаждую комбинированную единицу (например, m/s) в макрос, вы можете во "
"время \n"
"\tкомпиляции пройти декларацию единицы измерения в виде строки и разрешить "
"ее в\n"
"\tфундаментальные, некомбинированные единицы (например, разбить ее на "
"метры, \n"
"\tоператор / и секунды). Это похоже на настоящую работу по написанию "
"вычислителя/оценщика. \n"
"\tЭто добавило бы безопасности, поскольку уменьшило бы количество констант "
"преобразования,\n"
"\tкоторые вы должны ввести в макрос. Но сначала я хочу заняться чем-нибудь "
"другим. </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:308
msgctxt ""
"in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-"
"units.html:308"
msgid "\t<li/>"
msgstr ""

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:316
msgid ""
"<p><a name=\"2be3\"></a>SI units kinda suck. Not as hard as\n"
"\timperial units but still. If Iâm messing around with Quarks anyway\n"
"\tI can use Planck units internally. They have a number of advantages,\n"
"\tincluding that you donât need to enter all those floating point\n"
"\tvalues into variables with fixed precision. Planck units are robust\n"
"\tagainst âchangesâ in e.g. c, the speed of light. In Planck units\n"
"\tc is a fundamental building block with a value of 1.0. Nifty, eh?</p>"
msgstr ""
"<p><a name=\"2be3\"></a>Единицы измерения СИ отстой. Не так сложны, как "
"imperial(имперские/высшие) \n"
"\tединицы измерения, но все же. Если я все равно вожусь с кварками, \n"
"\tя могу использовать единицы измерения Планка внутри себя. У них есть \n"
"\tряд преимуществ, в том числе то, что вам не нужно вводить все эти "
"значения \n"
"\tс плавающей запятой в переменные с фиксированной точностью. Единицы "
"измерения \n"
"\tПланка устойчивы к «изменениям», например, в c, скорость света. В единицах "
"измерения\n"
"\tПланка c является фундаментальным строительным блоком со значением 1,0. "
"Отлично, а?</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:319
msgctxt ""
"in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-"
"units.html:319"
msgid "</ul>"
msgstr ""

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:321
msgid "<p><a name=\"4838\"></a>OK, so Planck units it is.</p>"
msgstr "<p><a name=\"4838\"></a>Итак, это единицы Планка.</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:328
msgid ""
"<p><a name=\"b8de\"></a>Now, do we have to re-enter our constants? If\n"
"we had written 300 values all over the source code and changed our\n"
"mind about what the internal units of our overall system are, do we\n"
"have to change those 300 pieces in the source code?</p>"
msgstr ""
"<p><a name=\"b8de\"></a>Теперь нам нужно повторно ввести наши константы? \n"
"Если бы мы написали 300 значений во всем исходном коде и передумали, \n"
"каковы внутренние единицы нашей системы в целом, должны ли мы изменить \n"
"эти 300 частей в исходном коде?</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:332
msgid "<p><a name=\"1ac6\"></a>No, silly.</p>"
msgstr "<p><a name=\"1ac6\"></a>Нет, это глупо.</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:341
msgid ""
"<p><a name=\"40b4\"></a>This whole theater is about *not* having to do\n"
"this. As long as all such source code places with literals have the\n"
"proper (unit â¦) declaration we only have to change the macro. After\n"
"recompiling the entire system with the changed macro *all* internal\n"
"state will be Planck units â even though *no* constants have been\n"
"entered as Planck units in the first place.</p>"
msgstr ""
"<p><a name=\"40b4\"></a>Весь этот театр о том, чтобы этого *не* делать. \n"
"Пока все такие места исходного кода с литералами имеют правильное "
"объявление \n"
"(unit â¦), нам нужно только изменить макрос. После перекомпиляции всей "
"системы \n"
"с измененным макросом *все* внутренние состояния будут Планковскими "
"единицами - \n"
"даже если *никакие* константы не были введены как единицы Планка с самого "
"начала. \n"
"</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:351
msgid ""
"<p><a name=\"f8a3\"></a>That is why you want compile time computing.\n"
"Regardless of what units you personally prefer, you should always\n"
"enter numbers in the unit you find them in. If wikipedia gives you h\n"
"in Joule*seconds you want to enter it into your source code as\n"
"Joule*seconds. You do not want to mess around with a pocket\n"
"calculator when entering those numbers. The error rate can only go\n"
"up.</p>"
msgstr ""
"<p><a name=\"f8a3\"></a>Вот почему вам нужны вычисления во время "
"компиляции. \n"
"Независимо от того, какие единицы вы лично предпочитаете, вы всегда должны \n"
"вводить числа в единицах, в которых вы их найдете. Если википедия дает вам \n"
"h в Joule*seconds(Джоуль * секундах), вы можете ввести его в свой исходный \n"
"код как Joule*seconds. Не стоит возиться с карманным калькулятором при "
"вводе \n"
"этих чисел. Количество ошибок может только возрасти.</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:355
msgid "<p><a name=\"1417\"></a>OK, so here goes:</p>"
msgstr "<p><a name=\"1417\"></a>Хорошо, так вот: </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:381
msgid ""
"<pre class=\"western\"><a name=\"280e\"></a>(defmacro unittmp (value unit)\n"
"  ;; helper to work around recursive\n"
"  ;; macro call.  See unit2 below\n"
"  ;; for proper fix\n"
"  (ecase unit\n"
"    (kg (/ value 2.176470e-8))))\n"
"(defmacro unit (value unit &amp;rest more)\n"
"  (declare (ignore more))\n"
"  (case unit\n"
"    (m/s (/ value 2.99792458e+8))\n"
"    (Js (/ value 1.054571800e-34))\n"
"    (m (/ value 1.616229e-35))\n"
"    (s (/ value 5.39116e-44))\n"
"    (kg (/ value 2.176470e-8))\n"
"    (:none value)\n"
"    ;; this gives an error:\n"
"    (MeV/c^2 (unittmp (* value 1.78266191e-30) kg))</pre>\n"
"<p>\n"
"<a name=\"a7a2\"></a>(EDITED: it has been pointed out to me that the\n"
"recursive macro call I had there there doesnât actually work in a\n"
"straight compilation of the file. See below for a proper fix, which\n"
"is to move the actual work into a function running at compile-time,\n"
"âunit2â. The above still serves to illustrate the points about\n"
"evaluation of macro argument right here)</p>"
msgstr ""
"<pre class=\"western\"><a name=\"280e\"></a>(defmacro unittmp (value unit)\n"
"  ;; helper to work around recursive\n"
"  ;; macro call.  See unit2 below\n"
"  ;; for proper fix\n"
"  (ecase unit\n"
"    (kg (/ value 2.176470e-8))))\n"
"(defmacro unit (value unit &amp;rest more)\n"
"  (declare (ignore more))\n"
"  (case unit\n"
"    (m/s (/ value 2.99792458e+8))\n"
"    (Js (/ value 1.054571800e-34))\n"
"    (m (/ value 1.616229e-35))\n"
"    (s (/ value 5.39116e-44))\n"
"    (kg (/ value 2.176470e-8))\n"
"    (:none value)\n"
"    ;; this gives an error:\n"
"    (MeV/c^2 (unittmp (* value 1.78266191e-30) kg))</pre>\n"
"<p>\n"
"<a name=\"a7a2\"></a>(EDITED: мне было указано, что рекурсивный вызов "
"макроса, \n"
"который у меня был там, на самом деле не работает при прямой компиляции "
"файла. \n"
"См. Ниже правильное исправление, которое заключается в перемещении "
"фактической \n"
"работы в выполняющуюся  во время компиляции функцию - «unit2». "
"Вышеупомянутое \n"
"все еще служит для иллюстрации моментов по вычислению аргумента макроса "
"прямо здесь) </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:389
msgid ""
"<p><a name=\"9089\"></a>So far so good, but this one chokes, and we are\n"
"now getting into the domain of actually having to learn how Lisp\n"
"macros work. The following error will look annoying to deal with, but\n"
"in the next section of this document I will show how the properly\n"
"causing this error can be used for further neat tricks.</p>"
msgstr ""
"<p><a name=\"9089\"></a>Пока все хорошо и теперь мы переходим к тому, \n"
"чтобы на самом деле изучить, как работают макросы Lisp. Следующая ошибка "
"будет выглядеть \n"
"раздражающей, но в следующем разделе этого документа я покажу, как правильно "
"вызвая\n"
"эту ошибку, можно использовать её для дальнейших изящных трюков.</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:393
msgid "<p><a name=\"7fc8\"></a>OK, so the error is this (at compile time):</p>"
msgstr ""
"<p><a name=\"7fc8\"></a>Хорошо, значит, ошибка такая (во время компиляции):</"
"p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:406
msgid ""
"<pre class=\"western\"><a name=\"a618\"></a>The "
"value                                                                                                                                                                                                    \n"
"       (* VALUE "
"1.7826618e-30)                                                                                                                                                                                    \n"
"     is not of "
"type                                                                                                                                                                                               \n"
"       NUMBER                                                                                                                                                                                                     \n"
"     when binding SB-KERNEL::X</pre>\n"
"<p>\n"
"<a name=\"63aa\"></a>So whatâs that? If you read the error message\n"
"carefully you will realize that the expression (* value 1.7) has not\n"
"been resolved to a number at the time that we use it in the (now\n"
"recursive) macro. Evaluation here has been delayed. But this doesnât\n"
"work. The reason why this doesnât work is:</p>"
msgstr ""
"<pre class=\"western\"><a name=\"a618\"></a>The "
"value                                                                                                                                                                                                    \n"
"       (* VALUE "
"1.7826618e-30)                                                                                                                                                                                    \n"
"     is not of "
"type                                                                                                                                                                                               \n"
"       NUMBER                                                                                                                                                                                                     \n"
"     when binding SB-KERNEL::X</pre>\n"
"<p>\n"
"<a name=\"63aa\"></a>\n"
"Так что это? Если вы внимательно прочитаете сообщение об ошибке, вы поймете, "
"что выражение \n"
"(* value 1.7) не было преобразовано в число в то время, когда мы используем "
"его в \n"
" (теперь рекурсивном) макросе. Вычисление здесь отложено. Но это не "
"работает. \n"
"Причина, по которой это не работает:</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:412
msgid ""
"<ul>\n"
"\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a name=\"c2c4\"></a>we asked the\n"
"\tcompiler to do the actual arithmetic at compile time</p>"
msgstr ""
"<ul>\n"
"\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a name=\"c2c4\"></a>мы попросили "
"компилятор \n"
"\tвыполнить фактическую арифметику во время компиляции</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:415
msgctxt ""
"in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-"
"units.html:415"
msgid "\t<li/>"
msgstr ""

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:419
msgid ""
"<p><a name=\"3899\"></a>but what we are passing to the\n"
"\tarithmetic operator is one number, and a piece of code. Since we\n"
"\tasked to do the math right now it canât do it.</p>"
msgstr ""
"<p><a name=\"3899\"></a> но мы передаем арифметическому оператору одно "
"число \n"
"\tи кусок кода. Поскольку мы попросили сделать математику прямо сейчас, \n"
"\tон(компилятор) не может этого сделать. </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:422
msgctxt ""
"in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-"
"units.html:422"
msgid "</ul>"
msgstr ""

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:425
msgid ""
"<p><a name=\"bedd\"></a>This is not the place to teach all about macro\n"
"argument evaluation. It can be fixed for now with this:</p>"
msgstr ""
"<p><a name=\"bedd\"></a>Это не то место, где можно рассказывать все о "
"вычислении\n"
"аргументов макросов. На данный момент это можно исправить следующим образом: "
"</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:431
msgid ""
"<pre class=\"western\" style=\"margin-bottom: 0.5cm\"><a name=\"1c37\"></"
"a>(MeV/c^2 (* value (unittmp 1.78266191e-30 kg)))</pre>\n"
"<p>\n"
"<a name=\"59b3\"></a><strong>Arithmetic with unit checking at compile\n"
"time.</strong></p>"
msgstr ""
"<pre class=\"western\" style=\"margin-bottom: 0.5cm\"><a name=\"1c37\"></"
"a>(MeV/c^2 (* value (unittmp 1.78266191e-30 kg)))</pre>\n"
"<p>\n"
"<a name=\"59b3\"></a><strong>Арифметика с проверкой единиц измерения во "
"время компиляции.</strong></p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:437
msgid ""
"<p><a name=\"73cf\"></a>Let us recap that annoying error needing a\n"
"workaround, and why I think the mechanism behind the error is a good\n"
"thing:</p>"
msgstr ""
"<p><a name=\"73cf\"></a>Давайте вспомним эту досадную ошибку, требующую "
"обходного пути, \n"
"и почему я считаю, что механизм, лежащий в основе ошибки, - это хорошо:</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:441
msgid "<p><a name=\"1222\"></a>This bombs:</p>"
msgstr "<p><a name=\"1222\"></a>Это бомбы:</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:449
msgid ""
"<pre class=\"western\" style=\"margin-bottom: 0.5cm\"><a name=\"b894\"></"
"a>(MeV/c^2 (unittmp (* value 1.78266191e-30) kg))</pre>\n"
"<p>\n"
"<a name=\"5da9\"></a>because (unit â¦) is a macro call, and (MeV/cÂ²\n"
"(unit (* value 1.78266191e-30) kg)) is not evaluated, so the math\n"
"operator (* â¦), which we invoke at compile time, cannot work. It\n"
"passes that entire code fragment. You can walk that code fragment.</p>"
msgstr ""
"<pre class=\"western\" style=\"margin-bottom: 0.5cm\"><a name=\"b894\"></"
"a>(MeV/c^2 (unittmp (* value 1.78266191e-30) kg))</pre>\n"
"<p>\n"
"<a name=\"5da9\"></a>поскольку (unit â¦) - это вызов макроса, а (MeV/cÂ²\n"
"(unit (* value 1.78266191e-30) kg)) не вычисляется, поэтому математический "
"оператор \n"
"(* â¦), который мы вызываем во время компиляции, не может работать . Он "
"пропускает \n"
"весь этот фрагмент кода. Вы можете пройтись по этому фрагменту кода.</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:453
msgid "<p><a name=\"33b8\"></a>OK, letâs play with this to understand:</p>"
msgstr ""
"<p><a name=\"33b8\"></a>Хорошо, давайте поиграем с этим, чтобы понять: </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:465
msgid ""
"<pre class=\"western\"><a name=\"0637\"></a>;; to be defined\n"
"(defmacro unit-test ...)\n"
"(defun testfun2 ()\n"
"  (unit-test 1 kg))</pre>\n"
"<p>\n"
"<a name=\"435d\"></a>The macro unit-test will be invoked at compile\n"
"time. That means when you compile the function testfun2, actions in\n"
"the macro will be carried out. We will use this to debug using the\n"
"only true debug facility that exists in the world â print\n"
"statements. Or in the case of Lisp, format statements.</p>"
msgstr ""
"<pre class=\"western\"><a name=\"0637\"></a>;; to be defined\n"
"(defmacro unit-test ...)\n"
"(defun testfun2 ()\n"
"  (unit-test 1 kg))</pre>\n"
"<p>\n"
"<a name=\"435d\"></a>Макрос unit-test будет вызван во время компиляции. \n"
"Это означает, что при компиляции функции testfun2 действия в макросе \n"
"будут выполняться. Мы будем использовать это для отладки, используя \n"
"единственное истинное средство отладки, которое существует в мире - \n"
"операторы печати. Или, в случае Lisp, операторы формата(format). </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:477
msgid ""
"<pre class=\"western\"><a name=\"2a41\"></a>(defmacro unit-test (value unit "
"&amp;rest more)\n"
"  (declare (ignore more))\n"
"  (format t &quot;~%value is '~a'~%&quot; value)\n"
"  (format t &quot;unit  is '~a'~%&quot; unit)\n"
"  value)\n"
"(defun testfun2 ()\n"
"  (unit-test 1 kg))</pre>\n"
"<p>\n"
"<a name=\"9c67\"></a>Gives you, at compile time, into the same stdout\n"
"as the compiler:</p>"
msgstr ""
"<pre class=\"western\"><a name=\"2a41\"></a>(defmacro unit-test (value unit "
"&amp;rest more)\n"
"  (declare (ignore more))\n"
"  (format t &quot;~%value is '~a'~%&quot; value)\n"
"  (format t &quot;unit  is '~a'~%&quot; unit)\n"
"  value)\n"
"(defun testfun2 ()\n"
"  (unit-test 1 kg))</pre>\n"
"<p>\n"
"<a name=\"9c67\"></a>Предоставляет вам во время компиляции тот же "
"стандартный вывод, \n"
"что и компилятор: </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:484
msgid ""
"<pre class=\"western\"><a name=\"dce4\"></a>value is "
"'1'                                                                    \n"
"unit  is 'KG'</pre>\n"
"<p>\n"
"<a name=\"cc02\"></a>Before I go any further, I want to make sure you\n"
"get this.</p>"
msgstr ""
"<pre class=\"western\"><a name=\"dce4\"></a>value is "
"'1'                                                                    \n"
"unit  is 'KG'</pre>\n"
"<p>\n"
"<a name=\"cc02\"></a>Прежде чем продолжить, я хочу убедиться, что вы это "
"поняли.</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:489
msgid ""
"<p><a name=\"6d36\"></a><strong><em>YOU HAVE THE ENTIRE LANGUAGE AT\n"
"YOUR DISPOSAL AT COMPILE TIME!!!</em></strong></p>"
msgstr ""
"<p><a name=\"6d36\"></a><strong><em>ВЕСЬ ЯЗЫК В ВАШЕМ РАСПОРЯЖЕНИИ ВО ВРЕМЯ "
"КОМПИЛЯЦИИ !!! </em></strong></p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:496
msgid ""
"<p><a name=\"475b\"></a>The entire thing. You can use printf/format\n"
"statements at compile time to print random data structures that float\n"
"around in your half-compiled code to debug them. Seen such a facility\n"
"with templates lately?</p>"
msgstr ""
"<p><a name=\"475b\"></a>Всё. Вы можете использовать операторы printf/"
"format \n"
"во время компиляции для печати случайных структур данных, которые \n"
"перемещаются в вашем наполовину скомпилированном коде для их отладки. \n"
"Видели такое средство для работы с шаблонами в последнее время?\n"
"</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:501
msgid ""
"<p><a name=\"4465\"></a>Anyway, so letâs see what happens with that\n"
"evaluation thing:</p>"
msgstr ""
"<p><a name=\"4465\"></a>В любом случае, давайте посмотрим, что произойдет "
"при вычислении\n"
"этого макроса: </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:512
msgid ""
"<pre class=\"western\"><a name=\"fa31\"></a>(defmacro unit-test (value unit "
"&amp;rest more)\n"
"  (declare (ignore more))\n"
"  (format t &quot;~%value is '~a'~%&quot; value)\n"
"  (format t &quot;unit  is '~a'~%&quot; unit)\n"
"  value)\n"
"(defun testfun3 ()\n"
"  (unit-test (* 1 1) kg))</pre>\n"
"<p>\n"
"<a name=\"4864\"></a>Output is:</p>"
msgstr ""
"<pre class=\"western\"><a name=\"fa31\"></a>(defmacro unit-test (value unit "
"&amp;rest more)\n"
"  (declare (ignore more))\n"
"  (format t &quot;~%value is '~a'~%&quot; value)\n"
"  (format t &quot;unit  is '~a'~%&quot; unit)\n"
"  value)\n"
"(defun testfun3 ()\n"
"  (unit-test (* 1 1) kg))</pre>\n"
"<p>\n"
"<a name=\"4864\"></a>Вывод будет:</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:522
msgid ""
"<pre class=\"western\"><a name=\"b122\"></a>; compiling (DEFUN "
"TESTFUN3 ...)                                                \n"
"value is '(* 1 "
"1)'                                                              \n"
"unit  is 'KG'</pre>\n"
"<p>\n"
"<a name=\"e909\"></a>Oops. There you have it. (* 1 1) is passed not as\n"
"an evaluated number, it is passed as a code fragment. This is\n"
"awesome. I mean not always, e.g. not at Friday night when this\n"
"happens in deeply nested macros and you have to debug it.</p>"
msgstr ""
"<pre class=\"western\"><a name=\"b122\"></a>; compiling (DEFUN "
"TESTFUN3 ...)                                                \n"
"value is '(* 1 "
"1)'                                                              \n"
"unit  is 'KG'</pre>\n"
"<p>\n"
"<a name=\"e909\"></a>Ой. Вот и все. (* 1 1) передается не как вычисляемое "
"число, \n"
"а как фрагмент кода. Это круто. Я имею в виду не всегда, например не в "
"пятницу \n"
"вечером, когда это происходит в глубоко вложенных макросах, и вам нужно "
"его \n"
"отлаживать.\n"
"</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:526
msgid "<p><a name=\"ff04\"></a>But it exposes a very powerful mechanism:</p>"
msgstr "<p><a name=\"ff04\"></a>Но это раскрывает очень мощный механизм: </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:540
msgid ""
"<pre class=\"western\"><a name=\"549a\"></a>(defmacro unit-test2 (value unit "
"&amp;rest more)\n"
"  (declare (ignore more))\n"
"  (format t &quot;~%value is '~a'~%&quot; value)\n"
"  (format t &quot;unit  is '~a'~%&quot; unit)\n"
"  (when (listp value)\n"
"    (dolist (element value)\n"
"      (format t &quot;list element is '~a'~%&quot; element)))\n"
"  value)\n"
"(defun testfun3 ()\n"
"  (unit-test2 (* 1 1) kg))</pre>\n"
"<p>\n"
"<a name=\"3cdc\"></a>Output is:</p>"
msgstr ""
"<pre class=\"western\"><a name=\"549a\"></a>(defmacro unit-test2 (value unit "
"&amp;rest more)\n"
"  (declare (ignore more))\n"
"  (format t &quot;~%value is '~a'~%&quot; value)\n"
"  (format t &quot;unit  is '~a'~%&quot; unit)\n"
"  (when (listp value)\n"
"    (dolist (element value)\n"
"      (format t &quot;list element is '~a'~%&quot; element)))\n"
"  value)\n"
"(defun testfun3 ()\n"
"  (unit-test2 (* 1 1) kg))</pre>\n"
"<p>\n"
"<a name=\"3cdc\"></a>Выводом будет:</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:551
msgid ""
"<pre class=\"western\"><a name=\"116c\"></a>value is '(* 1 "
"1)'                                                              \n"
"unit  is "
"'KG'                                                                   \n"
"list element is "
"'*'                                                             \n"
"list element is "
"'1'                                                             \n"
"list element is '1'</pre>\n"
"<p>\n"
"<a name=\"ab70\"></a>Woah. We can walk this code. We do not only have\n"
"Turing-complete code walking, we have code walking that can use THE\n"
"ENTIRE LANGUAGE at compile time.</p>"
msgstr ""
"<pre class=\"western\"><a name=\"116c\"></a>value is '(* 1 "
"1)'                                                              \n"
"unit  is "
"'KG'                                                                   \n"
"list element is "
"'*'                                                             \n"
"list element is "
"'1'                                                             \n"
"list element is '1'</pre>\n"
"<p>\n"
"<a name=\"ab70\"></a>Вау. Мы можем пройти этот код. У нас есть не только \n"
"обход полного по Тьюрингу кода, у нас есть обход кода, который может \n"
"использовать ВЕСЬ ЯЗЫК во время компиляции. </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:567
msgid ""
"<pre class=\"western\"><a name=\"3512\"></a>(defmacro unit-test3 (value unit "
"&amp;rest more)\n"
"  (declare (ignore more))\n"
"  (format t &quot;~%value is '~a'~%&quot; value)\n"
"  (format t &quot;unit  is '~a'~%&quot; unit)\n"
"  (when (listp value)\n"
"    (dolist (element value)\n"
"      (if (and (numberp element) (= element 42))\n"
"          (format t &quot;Looks like the answer to everything~%&quot;)\n"
"          (format t &quot;list element is '~a'~%&quot; element))))\n"
"  value)\n"
"(defun testfun3 ()\n"
"  (unit-test3 (* 42 1) kg))</pre>\n"
"<p>\n"
"<a name=\"da11\"></a>Output:</p>"
msgstr ""
"<pre class=\"western\"><a name=\"3512\"></a>(defmacro unit-test3 (value unit "
"&amp;rest more)\n"
"  (declare (ignore more))\n"
"  (format t &quot;~%value is '~a'~%&quot; value)\n"
"  (format t &quot;unit  is '~a'~%&quot; unit)\n"
"  (when (listp value)\n"
"    (dolist (element value)\n"
"      (if (and (numberp element) (= element 42))\n"
"          (format t &quot;Looks like the answer to everything~%&quot;)\n"
"          (format t &quot;list element is '~a'~%&quot; element))))\n"
"  value)\n"
"(defun testfun3 ()\n"
"  (unit-test3 (* 42 1) kg))</pre>\n"
"<p>\n"
"<a name=\"da11\"></a>Вывод:</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:577
msgid ""
"<pre class=\"western\"><a name=\"49d5\"></a>; compiling (DEFUN "
"TESTFUN3 ...)\n"
"value is '(* 42 "
"1)'                                                             \n"
"unit  is "
"'KG'                                                                   \n"
"list element is "
"'*'                                                             \n"
"Looks like the answer to "
"everything                                             \n"
"list element is '1'</pre>\n"
"<p>\n"
"<a name=\"c820\"></a>See, we can do whatever we want.</p>"
msgstr ""
"<pre class=\"western\"><a name=\"49d5\"></a>; compiling (DEFUN "
"TESTFUN3 ...)\n"
"value is '(* 42 "
"1)'                                                             \n"
"unit  is "
"'KG'                                                                   \n"
"list element is "
"'*'                                                             \n"
"Looks like the answer to "
"everything                                             \n"
"list element is '1'</pre>\n"
"<p>\n"
"<a name=\"c820\"></a>Видите, мы можем делать все, что захотим.</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:582
msgid ""
"<p><a name=\"e4f1\"></a>It isnât limited to inspecting the code.\n"
"Macros are there to make new code. So letâs try this.</p>"
msgstr ""
"<p><a name=\"e4f1\"></a>Это не ограничивается проверкой кода. \n"
"Макросы нужны для создания нового кода. Так что давай попробуем это. </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:600
msgid ""
"<pre class=\"western\"><a name=\"f549\"></a>(defmacro unit-test4 (value unit "
"&amp;rest more)\n"
"  (declare (ignore more))\n"
"  (when (listp value)\n"
"    (dolist (element value)\n"
"      (when (and (numberp element) (= element 42))\n"
"        (return-from unit-test4 `(progn\n"
"                                   (dotimes (i 4)\n"
"                                     (format t &quot;hello, world~%&quot;))\n"
"                                   ,value)))))\n"
"  value)\n"
"(defun testfun4a ()\n"
"  (unit-test4 (* 41 1) kg))\n"
"(defun testfun4b ()\n"
"  (unit-test4 (* 42 1) kg))</pre>\n"
"<p>\n"
"<a name=\"f46b\"></a>Running it:</p>"
msgstr ""
"<pre class=\"western\"><a name=\"f549\"></a>(defmacro unit-test4 (value unit "
"&amp;rest more)\n"
"  (declare (ignore more))\n"
"  (when (listp value)\n"
"    (dolist (element value)\n"
"      (when (and (numberp element) (= element 42))\n"
"        (return-from unit-test4 `(progn\n"
"                                   (dotimes (i 4)\n"
"                                     (format t &quot;hello, world~%&quot;))\n"
"                                   ,value)))))\n"
"  value)\n"
"(defun testfun4a ()\n"
"  (unit-test4 (* 41 1) kg))\n"
"(defun testfun4b ()\n"
"  (unit-test4 (* 42 1) kg))</pre>\n"
"<p>\n"
"<a name=\"f46b\"></a>Запускаем это:</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:614
msgid ""
"<pre class=\"western\"><a name=\"c2a1\"></a>Yes, Master? CL-USER&gt; "
"(testfun4a)\n"
"41                                                                              \n"
"Yes, Master? CL-USER&gt; (testfun4b)\n"
"hello, "
"world                                                                    \n"
"hello, "
"world                                                                    \n"
"hello, "
"world                                                                    \n"
"hello, "
"world                                                                    \n"
"42                                                                              \n"
"Yes, Master? CL-USER&gt;</pre>\n"
"<p>\n"
"<a name=\"7683\"></a>Woah. We actually inserted new code into the\n"
"function. Can we see what is going on? Sure:</p>"
msgstr ""
"<pre class=\"western\"><a name=\"c2a1\"></a>Yes, Master? CL-USER&gt; "
"(testfun4a)\n"
"41                                                                              \n"
"Yes, Master? CL-USER&gt; (testfun4b)\n"
"hello, "
"world                                                                    \n"
"hello, "
"world                                                                    \n"
"hello, "
"world                                                                    \n"
"hello, "
"world                                                                    \n"
"42                                                                              \n"
"Yes, Master? CL-USER&gt;</pre>\n"
"<p>\n"
"<a name=\"7683\"></a>Вау. Фактически мы вставили в функцию новый код. \n"
"Можем ли мы увидеть, что происходит? Конечно: </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:628
msgid ""
"<pre class=\"western\"><a name=\"b4f7\"></a>Yes, Master? CL-USER&gt; "
"(macroexpand '(unit-test4 (* 41 1) kg))\n"
"(* 41 "
"1)                                                                        \n"
"T                                                                               \n"
"Yes, Master? CL-USER&gt; (macroexpand '(unit-test4 (* 42 1) kg))\n"
"(PROGN (DOTIMES (I 4) (FORMAT T &quot;hello, world~%&quot;)) (* 42 "
"1))                    \n"
"T                                                                               \n"
"Yes, Master? CL-USER&gt;</pre>\n"
"<p>\n"
"<a name=\"d9bb\"></a>That is the most basic macroexpansion debugging\n"
"there is. There are much more sophisticated macroexpand debugging\n"
"facilities in the IDEâs, e.g. SLIME. Finely controlled evaluation\n"
"until you can figure out whatâs going on.</p>"
msgstr ""
"<pre class=\"western\"><a name=\"b4f7\"></a>Yes, Master? CL-USER&gt; "
"(macroexpand '(unit-test4 (* 41 1) kg))\n"
"(* 41 "
"1)                                                                        \n"
"T                                                                               \n"
"Yes, Master? CL-USER&gt; (macroexpand '(unit-test4 (* 42 1) kg))\n"
"(PROGN (DOTIMES (I 4) (FORMAT T &quot;hello, world~%&quot;)) (* 42 "
"1))                    \n"
"T                                                                               \n"
"Yes, Master? CL-USER&gt;</pre>\n"
"<p>\n"
"<a name=\"d9bb\"></a>Это самая простая отладка макросов(расширения "
"макросов). \n"
"В среде IDE есть гораздо более сложные средства отладки макросов, например в "
"SLIME. \n"
"Точно контролируемое вычисление, пока вы не поймете, что происходит.</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:632
msgid "<p><a name=\"f554\"></a>Now, how do we use this to our advantage?</p>"
msgstr ""
"<p><a name=\"f554\"></a>Итак, как мы можем использовать это в наших "
"интересах?</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:637
msgid ""
"<p><a name=\"4f4a\"></a>Well, we can do arithmetic with unit checking\n"
"at compile time.</p>"
msgstr ""
"<p><a name=\"4f4a\"></a>Что ж, мы можем выполнять арифметические операции "
"с \n"
"проверкой unit(единиц измерения) во время компиляции. </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:653
msgid ""
"<pre class=\"western\"><a name=\"19c5\"></a>(defmacro plus-with-units (val1 "
"val2)\n"
"  ;; fancy code here\n"
"  (+ val1 val2))\n"
";; this should work\n"
"(defun testfun5a ()\n"
"  (plus-with-units (unit 5 m/s) (unit 6 m/s)))\n"
";; this should *not* work\n"
"(defun testfun5b ()\n"
"  (plus-with-units (unit 5 m/s) (unit 6 m)))\n"
";; this can be made to work later\n"
"(defun testfun5c ()\n"
"  (plus-with-units (unit 5 m/s) (unit 6 km/h)))</pre>\n"
"<p>\n"
"<a name=\"1fae\"></a>OK, so what is the objective here?</p>"
msgstr ""
"<pre class=\"western\"><a name=\"19c5\"></a>(defmacro plus-with-units (val1 "
"val2)\n"
"  ;; fancy code here\n"
"  (+ val1 val2))\n"
";; this should work\n"
"(defun testfun5a ()\n"
"  (plus-with-units (unit 5 m/s) (unit 6 m/s)))\n"
";; this should *not* work\n"
"(defun testfun5b ()\n"
"  (plus-with-units (unit 5 m/s) (unit 6 m)))\n"
";; this can be made to work later\n"
"(defun testfun5c ()\n"
"  (plus-with-units (unit 5 m/s) (unit 6 km/h)))</pre>\n"
"<p>\n"
"<a name=\"1fae\"></a>Хорошо, так какова здесь цель? </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:661
msgid ""
"<ul>\n"
"\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a name=\"d66a\"></a>if the units\n"
"\tare available, they should be checked. In the first version for\n"
"\tbeing equal, in the more fancy version for being compatible. Either\n"
"\tway we want to catch errors.</p>"
msgstr ""
"<ul>\n"
"\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a name=\"d66a\"></a>если единицы измерения "
"имеются, \n"
"\tих следует проверить. В первой версии для равенства(equal), в более "
"модной \n"
"\tверсии для совместимости. В любом случае мы хотим отлавливать ошибки.</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:666
msgid ""
"\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a name=\"2cfb\"></a>we donât\n"
"\twant to spend an entire night implementing this.</p>"
msgstr ""
"\t<li/>\n"
"<p style=\"margin-bottom: 0cm\"><a name=\"2cfb\"></a>мы не хотим \n"
"\tтратить на это целую ночь..</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:669
msgctxt ""
"in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-"
"units.html:669"
msgid "\t<li/>"
msgstr ""

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:673
msgid ""
"<p><a name=\"cafe\"></a>the check should happen at compile time.\n"
"\tThe compiled code should have nothing except one compiled out number\n"
"\tin Planck units.</p>"
msgstr ""
"<p><a name=\"cafe\"></a>проверка должна происходить во время компиляции. \n"
"\tВ скомпилированном коде не должно быть ничего, кроме одного \n"
"\tскомпилированного числа в единицах измерения Планка. .</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:698
msgid ""
"</ul>\n"
"<pre class=\"western\"><a name=\"97d4\"></a>(defmacro plus-with-units (val1 "
"val2)\n"
"  (let (firstunit)\n"
"    (dolist (thing (list val1 val2))\n"
"      (when (listp thing)\n"
"        (if (not firstunit)\n"
"            (setf firstunit (third thing))\n"
"            (unless (equal firstunit (third thing))\n"
"              ;; print a clear error message.  Not something people\n"
"              ;; need to copy into a web page to translate to human\n"
"              (error &quot;Incompatible units: ~a ~a~%&quot;\n"
"                     firstunit (third thing)))))))\n"
"  ;; delay evaluation\n"
"  `(+ ,val1 ,val2))\n"
";; works:\n"
"(defun testfun5a ()\n"
"  (plus-with-units (unit 5 m/s) (unit 6 m/s)))\n"
";; error:\n"
"(defun testfun5b ()\n"
"  (plus-with-units (unit 5 m/s) (unit 6 m)))</pre>\n"
"<p>\n"
"<a name=\"9819\"></a>The error as displayed for the second test at\n"
"compile-time is:</p>"
msgstr ""
"</ul>\n"
"<pre class=\"western\"><a name=\"97d4\"></a>(defmacro plus-with-units (val1 "
"val2)\n"
"  (let (firstunit)\n"
"    (dolist (thing (list val1 val2))\n"
"      (when (listp thing)\n"
"        (if (not firstunit)\n"
"            (setf firstunit (third thing))\n"
"            (unless (equal firstunit (third thing))\n"
"              ;; print a clear error message.  Not something people\n"
"              ;; need to copy into a web page to translate to human\n"
"              (error &quot;Incompatible units: ~a ~a~%&quot;\n"
"                     firstunit (third thing)))))))\n"
"  ;; delay evaluation\n"
"  `(+ ,val1 ,val2))\n"
";; works:\n"
"(defun testfun5a ()\n"
"  (plus-with-units (unit 5 m/s) (unit 6 m/s)))\n"
";; error:\n"
"(defun testfun5b ()\n"
"  (plus-with-units (unit 5 m/s) (unit 6 m)))</pre>\n"
"<p>\n"
"<a name=\"9819\"></a>Ошибка, отображаемая для второго теста во \n"
"время компиляции: </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:704
msgid ""
"<pre class=\"western\"><a name=\"d23a\"></a>crachem."
"lisp:209:3:                                                                                                                                                                                               \n"
"  error:                                                                                                                                                                                                          \n"
"    during macroexpansion of (PLUS-WITH-UNITS (UNIT 5 M/S) (UNIT 6 M)). "
"Use                                                                                                                                       \n"
"    *BREAK-ON-SIGNALS* to "
"intercept.                                                                                                                                                                              "
msgstr ""

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:708
msgid ""
"<a name=\"705c\"></a>     Incompatible units: M/S MCompilation failed.</"
"pre>\n"
"<p>\n"
"<a name=\"377f\"></a>Allright. Looks useful.</p>"
msgstr ""
"<a name=\"705c\"></a>     Incompatible units: M/S MCompilation failed.</"
"pre>\n"
"<p>\n"
"<a name=\"377f\"></a>Отлично. Смотрится полезно.</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:716
msgid ""
"<p><a name=\"e398\"></a>So we have the full language at our disposal,\n"
"at compile-time, with printf/format and all. And we can use that do\n"
"give useful error messages at compile time. Just like in real code.\n"
"It is really bad when your language forces you to use a different,\n"
"crippled language at compile time.</p>"
msgstr ""
"<p><a name=\"e398\"></a>Таким образом, в нашем распоряжении есть \n"
"полный язык во время компиляции, с printf/format и всем остальным. \n"
"И мы можем использовать это, чтобы давать полезные сообщения об ошибках \n"
"во время компиляции. Прямо как в реальном коде. Это действительно плохо, \n"
"когда ваш язык заставляет вас использовать другой, урезанный язык во \n"
"время компиляции. </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:723
msgid ""
"<p><a name=\"474f\"></a>I want to wind down this post here. As you can\n"
"see, the (plus-with-units â¦) macro is not sophisticated, it would\n"
"at least have to check that the first list element is indeed âunitâ.\n"
"Actually, no. It should integrate with the (unitâ¦) macro.</p>"
msgstr ""
"<p><a name=\"474f\"></a>Я хочу завершить этот пост на этом месте. \n"
"Как видите, макрос (plus-with-units …) не является сложным, он должен, \n"
"по крайней мере, проверить, что первый элемент списка действительно \n"
"является «unit». Вообще-то, нет. Он должен интегрироваться с макросом \n"
"(unit …).</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:733
msgid ""
"<p><a name=\"b9f8\"></a>The way to do this further is that you change\n"
"the (unit â¦) macro to allow the programmer to use it to learn more\n"
"about the macro call. Right now you only get the converted number out\n"
"of the (unit â¦) call. The (unit â¦) call knows which unit was\n"
"used, but you cannot ask it to give it to you. While we are at it,\n"
"the (unit â¦) macro could also tell us what kind of unit that is\n"
"(speed, weight etc).</p>"
msgstr ""
"<p><a name=\"b9f8\"></a>Чтобы сделать это дальше, вы измените макрос \n"
"(unit …), чтобы позволить программисту использовать его для получения \n"
"дополнительных сведений о вызове макроса. Прямо сейчас вы получаете только \n"
"преобразованный номер из вызова (unit …). Вызов (unit …) знает, какая \n"
"единица измерения была использована, но вы не можете попросить его "
"передать \n"
"её вам. Пока мы это делаем, макрос (unit …) может также сказать нам, что \n"
"это за единица (скорость/speed, вес/weight и т. Д.). </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:742
msgid ""
"<p><a name=\"cd4d\"></a>We use multiple-value returns for this. A\n"
"function in Common Lisp can return more than one value, and unless\n"
"you deliberately capture them all but the first are ignored. We also\n"
"want to convert the bulk of this macro into a function, because that\n"
"is easier to debug. Did I mention you can define functions and use\n"
"them at compile time, from macros?</p>"
msgstr ""
"<p><a name=\"cd4d\"></a>Для этого мы используем возврат с несколькими "
"значениями. \n"
"Функция в Common Lisp может возвращать более одного значения, и если вы \n"
"намеренно не захватите их, все, кроме первого, игнорируются. Мы также "
"хотим \n"
"преобразовать большую часть этого макроса в функцию, потому что это её \n"
"легче отлаживать. Я упоминал, что вы можете определять функции и "
"использовать \n"
"их во время компиляции из макросов?</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:746
msgid "<p><a name=\"df22\"></a>Example implementation:</p>"
msgstr "<p><a name=\"df22\"></a>Пример реализации:</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:777
msgid ""
"<pre class=\"western\"><a name=\"e41e\"></a>;; this unit knower returns "
"three values:\n"
";; - the converted value\n"
";; - the unit\n"
";; - what kind of unit is it?\n"
"(eval-when (:compile-toplevel)\n"
"  (defun unit2-helper (value unit)\n"
"    (let* (whatkind\n"
"    (newvalue\n"
"     (case unit\n"
"       (m/s (setf whatkind 'speed) (/ value 2.99792458e+8))\n"
"       (Js (setf whatkind 'energy-time) (/ value 1.054571800e-34))\n"
"       (m (setf whatkind 'length) (/ value 1.616229e-35))\n"
"       (s (setf whatkind 'time) (/ value 5.39116e-44))\n"
"       (kg (setf whatkind 'mass) (/ value 2.176470e-8))\n"
"       (:none (setf whatkind 'none) value)\n"
"       (MeV/c^2 (setf whatkind 'mass)\n"
"                (* value (unit2-helper 1.78266191e-30 'kg)))\n"
"       (t (error &quot;unknown unit ~a&quot; unit)))))\n"
"<a name=\"e206\"></a>      (values newvalue unit whatkind))));; this is the "
"dumb frontend you call from regular code\n"
"(defmacro unit2 (value unit &amp;rest more)\n"
"  (declare (ignore more))\n"
"  (unit2-helper value unit))</pre>\n"
"<p>\n"
"<a name=\"b34b\"></a>(As you can guess, Common Lisp is hygienic. defun\n"
"results are supposed to be available at run time. They are not\n"
"supposed to pollute the compile-time environment with their symbols\n"
"that are intended for runtime. Lisp gives us a way change that, with\n"
"a â(eval-when â¦)â statement. That is actually required when you\n"
"use a properly hygienic Lisp implementation.)</p>"
msgstr ""
"<pre class=\"western\"><a name=\"e41e\"></a>;; this unit knower returns "
"three values:\n"
";; - the converted value\n"
";; - the unit\n"
";; - what kind of unit is it?\n"
"(eval-when (:compile-toplevel)\n"
"  (defun unit2-helper (value unit)\n"
"    (let* (whatkind\n"
"    (newvalue\n"
"     (case unit\n"
"       (m/s (setf whatkind 'speed) (/ value 2.99792458e+8))\n"
"       (Js (setf whatkind 'energy-time) (/ value 1.054571800e-34))\n"
"       (m (setf whatkind 'length) (/ value 1.616229e-35))\n"
"       (s (setf whatkind 'time) (/ value 5.39116e-44))\n"
"       (kg (setf whatkind 'mass) (/ value 2.176470e-8))\n"
"       (:none (setf whatkind 'none) value)\n"
"       (MeV/c^2 (setf whatkind 'mass)\n"
"                (* value (unit2-helper 1.78266191e-30 'kg)))\n"
"       (t (error &quot;unknown unit ~a&quot; unit)))))\n"
"<a name=\"e206\"></a>      (values newvalue unit whatkind))));; this is the "
"dumb frontend you call from regular code\n"
"(defmacro unit2 (value unit &amp;rest more)\n"
"  (declare (ignore more))\n"
"  (unit2-helper value unit))</pre>\n"
"<p>\n"
"<a name=\"b34b\"></a>(Как вы можете догадаться, Common Lisp гигиеничен. \n"
"Предполагается, что результаты defun будут доступны во время выполнения. \n"
"Они не должны загрязнять среду времени компиляции своими символами, \n"
"предназначенными для времени выполнения. Lisp дает нам возможность изменить "
"это, \n"
"с оператором «(eval-when…)». Это действительно требуется, \n"
"когда вы используете должным образом гигиеничную реализацию Лиспа.)</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:784
msgid ""
"<p><a name=\"e92a\"></a>The basic macro (unit2â¦) behaves like (unitâ¦)\n"
"did before. That is what you use when writing ordinary code. But the\n"
"new toy gives us the ability to know more about the (unit2 â¦) calls\n"
"coming in. We can use that to improve things tremendously.</p>"
msgstr ""
"<p><a name=\"e92a\"></a>Базовый макрос (unit2 …) ведет себя так же, как \n"
"(unit…) раньше. Это то, что вы используете при написании обычного кода. \n"
"Но новая игрушка дает нам возможность узнать больше о входящих вызовах \n"
"(unit2 …). Мы можем использовать это, чтобы значительно улучшить ситуацию. \n"
"</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:808
msgid ""
"<pre class=\"western\"><a name=\"f567\"></a>(defmacro plus-with-units2 (val1 "
"val2)\n"
"  (let (firstkind)\n"
"    (dolist (thing (list val1 val2))\n"
"      (when (and (listp thing) (equal (first thing) 'UNIT2))\n"
"        (multiple-value-bind (newvalue unit whatkind)\n"
"            (unit2-helper (second thing) (third thing))\n"
"          (print whatkind)\n"
"          (if (not firstkind)\n"
"              (setf firstkind whatkind)\n"
"              (unless (equal firstkind whatkind)\n"
"                ;; print a clear error message.  Not something people\n"
"                ;; need to copy into a web page to translate to human\n"
"                (error &quot;Incompatible units: ~a ~a~%&quot;\n"
"                       firstkind whatkind)))))))\n"
"  ;; delay evaluation until later in compilation\n"
"  `(+ ,val1 ,val2))\n"
";; this now works, the code recognizes that kg and MeV/c^2\n"
";; are both units of the same kind - mass\n"
"(defun testfun6 ()\n"
"  (plus-with-units2 (unit2 5 kg) (unit2 6 MeV/c^2)))</pre>\n"
"<p>\n"
"<a name=\"4322\"></a>Make sure that everything happens at compile time:</p>"
msgstr ""
"<pre class=\"western\"><a name=\"f567\"></a>(defmacro plus-with-units2 (val1 "
"val2)\n"
"  (let (firstkind)\n"
"    (dolist (thing (list val1 val2))\n"
"      (when (and (listp thing) (equal (first thing) 'UNIT2))\n"
"        (multiple-value-bind (newvalue unit whatkind)\n"
"            (unit2-helper (second thing) (third thing))\n"
"          (print whatkind)\n"
"          (if (not firstkind)\n"
"              (setf firstkind whatkind)\n"
"              (unless (equal firstkind whatkind)\n"
"                ;; print a clear error message.  Not something people\n"
"                ;; need to copy into a web page to translate to human\n"
"                (error &quot;Incompatible units: ~a ~a~%&quot;\n"
"                       firstkind whatkind)))))))\n"
"  ;; delay evaluation until later in compilation\n"
"  `(+ ,val1 ,val2))\n"
";; this now works, the code recognizes that kg and MeV/c^2\n"
";; are both units of the same kind - mass\n"
"(defun testfun6 ()\n"
"  (plus-with-units2 (unit2 5 kg) (unit2 6 MeV/c^2)))</pre>\n"
"<p>\n"
"<a name=\"4322\"></a>Убедитесь, что все происходит во время компиляции: </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:823
msgid ""
"<pre class=\"western\"><a name=\"380e\"></a>Yes, Master? CL-USER&gt; "
"(disassemble 'testfun6)\n"
"; disassembly for TESTFUN6\n"
"; Size: 13 bytes. Origin: #x52E3B9B6\n"
"; B6:   488B15B3FFFFFF   MOV RDX, [RIP-77]; no-arg-parsing entry point\n"
"                                          ; 2.297298e8\n"
"; BD:   488BE5           MOV RSP, RBP\n"
"; C0:   F8               CLC\n"
"; C1:   5D               POP RBP\n"
"; C2:   C3               RET\n"
"NIL\n"
"Yes, Master? CL-USER&gt;</pre>\n"
"<p>\n"
"<a name=\"8136\"></a>Looking good.</p>"
msgstr ""
"<pre class=\"western\"><a name=\"380e\"></a>Yes, Master? CL-USER&gt; "
"(disassemble 'testfun6)\n"
"; disassembly for TESTFUN6\n"
"; Size: 13 bytes. Origin: #x52E3B9B6\n"
"; B6:   488B15B3FFFFFF   MOV RDX, [RIP-77]; no-arg-parsing entry point\n"
"                                          ; 2.297298e8\n"
"; BD:   488BE5           MOV RSP, RBP\n"
"; C0:   F8               CLC\n"
"; C1:   5D               POP RBP\n"
"; C2:   C3               RET\n"
"NIL\n"
"Yes, Master? CL-USER&gt;</pre>\n"
"<p>\n"
"<a name=\"8136\"></a>Выглядит хорошо</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:827
msgid "<p><a name=\"68c2\"></a>Further work:</p>"
msgstr "<p><a name=\"68c2\"></a>Дальнейшая работа:</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:838
msgid ""
"<p><a name=\"cd6e\"></a>How do you do this with values that come in via\n"
"files? Easy, you wrap a macros around the line-by-line file readers\n"
"that declares which field has which unit. The unit is then checked\n"
"once when the file is opened, but since it knows that the code block\n"
"iterating over the lines doesnât change units the check doesnât\n"
"have to happen again. The macro would insert the conversion math into\n"
"the code of the line-iterating code body. So you can do something\n"
"like:</p>"
msgstr ""
"<p><a name=\"cd6e\"></a>Как это сделать со значениями, поступающими через "
"файлы? \n"
"Легко, вы помещаете макрос в программу чтения файлов построчно, который "
"объявляет, \n"
"какое поле имеет какую единицу измерения. Затем единица измерения "
"проверяется \n"
"один раз при открытии файла, но поскольку он знает, что блок кода, "
"повторяющийся \n"
"по строкам, не меняет единицы измерения, проверка не должна повторяться "
"снова. \n"
"Макрос вставит математику преобразования в код тела кода с итерацией "
"строк. \n"
"Итак, вы можете сделать что-то вроде: </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:857
msgid ""
"<pre class=\"western\"><a name=\"2196\"></a>(with-unit-file-field (&quot;foo."
"txt&quot; ((mass :column 1 :unit kg))\n"
"  (+ *blah* mass)) ; variable mass is converted to Planck unit\n"
";; if you are willing to walk the body of code:\n"
"(with-unit-file-field (&quot;foo.txt&quot; ((mass :column 1 :unit kg))\n"
"  (+ *blah* (* (unit 8 kg) mass)))\n"
";; that would throw an error if mass wasn't a mass unit</pre>\n"
"<p>\n"
"<a name=\"8be8\"></a>That evaluator to do algebra on the text of the\n"
"units so that you can convert them automatically after having defined\n"
"only the most basic units would be nifty to have. I want this to be a\n"
"more generic algebra converter, though. So, for example I donât\n"
"want to resolve mathematical functions by several variables and then\n"
"enter those functions into the source code. I want to enter the\n"
"function once, then tell a macro to generate a couple of function\n"
"resolved by various variables. My Scheimpflug code for shift-tilt\n"
"photography isnât writing itself â but it should, and it could,\n"
"in Lisp.</p>"
msgstr ""
"<pre class=\"western\"><a name=\"2196\"></a>(with-unit-file-field (&quot;foo."
"txt&quot; ((mass :column 1 :unit kg))\n"
"  (+ *blah* mass)) ; variable mass is converted to Planck unit\n"
";; if you are willing to walk the body of code:\n"
"(with-unit-file-field (&quot;foo.txt&quot; ((mass :column 1 :unit kg))\n"
"  (+ *blah* (* (unit 8 kg) mass)))\n"
";; that would throw an error if mass wasn't a mass unit</pre>\n"
"<p>\n"
"<a name=\"8be8\"></a>Было бы неплохо иметь этот вычислитель, \n"
"который выполняет алгебру над текстом единиц измерения, \n"
"чтобы вы могли автоматически преобразовывать их после определения \n"
"только самых основных единиц. Однако я хочу, чтобы это был более \n"
"общий алгебраический преобразователь. Так, например, я не хочу \n"
"разрешать математические функции по нескольким переменным, \n"
"а затем вводить эти функции в исходный код. Я хочу войти в функцию один "
"раз, \n"
"а затем сказать макросу, чтобы он сгенерировал пару функций, \n"
"разрешаемых различными переменными. Мой код Scheimpflug для "
"фоторграфирования\n"
" с наклоном и сдвигом не пишет сам себя, но он должен и мог бы на Лиспе.</p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:862
msgid ""
"<p><a name=\"fd8c\"></a>If you are curious what we are doing with Lisp,\n"
"here is the latest demo (chemistry):</p>"
msgstr ""
"<p><a name=\"fd8c\"></a>Если вам интересно, что мы делаем с Lisp, \n"
"вот последняя демонстрация (химия): </p>"

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:865
msgid "<p style=\"margin-bottom: 0cm; line-height: 100%\"><br/>"
msgstr ""

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:867
msgid "</p>"
msgstr ""

#: in_ed/a-gentle-introduction-to-compile-time-computing-part-3-scientific-units.html:870
msgid ""
"</body>\n"
"</html>"
msgstr ""
